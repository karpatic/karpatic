{"meta":{"filename":"dataplay","title":"Dataplay: The Data Handling Handbook and Python Library","summary":"Our one stop shop to learn about data intake, processing, and visualization.","template":"template_article","sitemap":"dataplay","tab":"00_dataplay","csp":"img-src 'self' https://charleskarpati.com/ data: https://raw.githubusercontent.com/ https://static.mybinder.org/ https://mybinder.org/ https://pete88b.github.io/ https://badges.frapsoft.com/ https://img.shields.io/ http://img.shields.io/; connect-src 'self';"},"content":"<img align=\"right\" src=\"https://raw.githubusercontent.com/bniajfi/bniajfi/main/bnia_logo_new.png\" height=\"160px\" width=\"auto\">\n \n <h2 align=\"left\"><img src=\"https://raw.githubusercontent.com/sidbelbase/sidbelbase/master/wave.gif\" width=\"30px\">Hi! We are <a href=\"https://bniajfi.org/\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">BNIA-JFI</a>.</h2>\n \n<p> This package was made to help with data handling</p>\n<p> <strong>Included</strong></p>\n<ul>\n<li><p>Functions built and used by BNIA for day to day tasks.</p></li>\n<li><p>Made to be shared via IPYNB/ Google Colab notebooks with in-built examples using 100% publicly accessible data &amp; links.</p></li>\n<li><p>Online <a href=\"https://bniajfi.org/dataplay/\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">documentation</a>  and <a href=\"https://pypi.org/project/dataplay/\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">PyPi</a> libraries created from the notebooks.</p></li>\n</ul>\n <p><a href=\"https://github.com/bniajfi\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">TOC</a></p>\n <p><a href=\"https://bniajfi.org/dataplay/\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Dataplay</a> uses functions found in our <a href=\"https://bniajfi.org/VitalSigns/\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">VitalSigns</a> Module and vice-versa.</p>\n <p><a href=\"https://mybinder.org/v2/gh/bnia/dataplay/main?filepath=%2Fnotebooks%2Findex.ipynb\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://mybinder.org/badge_logo.svg\" alt=\"Binder\"></a>\n <a href=\"https://colab.research.google.com/github/bnia/dataplay/blob/main/notebooks/index.ipynb\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://pete88b.github.io/fastpages/assets/badges/colab.svg\" alt=\"Binder\"></a>\n <a href=\"https://github.com/bnia/dataplay/tree/main/notebooks/index.ipynb\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://pete88b.github.io/fastpages/assets/badges/github.svg\" alt=\"Binder\"></a>\n <a href=\"https://github.com/ellerbrock/open-source-badges/\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://badges.frapsoft.com/os/v3/open-source.svg?v=103\" alt=\"Open Source Love svg3\"></a></p>\n<p> <a href=\"https://github.com/bnia/dataplay/blob/main/LICENSE\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/npm/l/all-contributors.svg?style=flat\" alt=\"NPM License\"></a>\n <a href=\"https://bnia.github.io\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"http://img.shields.io/badge/Status-Active-green.svg\" alt=\"Active\"></a> \n <a href=\"https://pypi.python.org/pypi/dataplay/\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/pypi/pyversions/dataplay.svg\" alt=\"Python Versions\"></a>\n <a href=\"\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/last-commit/bnia/dataplay.svg?style=flat\" alt=\"GitHub last commit\"></a>  </p>\n<p> <a href=\"https://github.com/bnia/dataplay\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/stars/bnia/dataplay.svg?style=social&label=Star\" alt=\"GitHub stars\"></a> \n <a href=\"https://github.com/bnia/dataplay\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/watchers/bnia/dataplay.svg?style=social&label=Watch\" alt=\"GitHub watchers\"></a> \n <a href=\"https://github.com/bnia/dataplay\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/forks/bnia/dataplay.svg?style=social&label=Fork\" alt=\"GitHub forks\"></a> \n <a href=\"https://github.com/bnia/dataplay\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/followers/bnia.svg?style=social&label=Follow\" alt=\"GitHub followers\"></a> </p>\n<p> <a href=\"https://twitter.com/intent/tweet?text=Check%20out%20this%20%E2%9C%A8%20colab%20by%20@bniajfi%20https://github.com/bnia/dataplay%20%F0%9F%A4%97\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/twitter/url/https/github.com/bnia/dataplay.svg?style=social\" alt=\"Tweet\"></a> \n <a href=\"https://twitter.com/bniajfi\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/twitter/follow/bniajfi.svg?style=social\" alt=\"Twitter Follow\"></a></p>\n <h2 align=\"left\">Create maps, networks graphs, and gifs!</h2>\n <img src=\"https://bniajfi.org/images/mermaid/vitalSignsCorrelations.png\" width=\"500px\">\n <img src=\"https://bniajfi.org/images/mermaid/vitalSignsGif.gif\" width=\"500px\"> <h2 id=\"about-this-tutorial\">About this Tutorial:</h2>\n <h3 id=\"whats-inside\">Whats inside?</h3>\n <h4 id=\"the-tutorial\"><strong>The Tutorial</strong></h4>\n <p>You use can use these docs to learn from or as documentation when using the attached library.</p>\n <h4 id=\"tips\"><strong>TIPS</strong></h4>\n<ul>\n<li><p>Content covered in previous tutorials will be used in later tutorials. </p>\n</li>\n<li><p><strong>New code and or  information <em>should</em> have explanations and or descriptions</strong> attached. </p>\n</li>\n<li><p>Concepts or code covered in previous tutorials will be used without being explaining in entirety.</p>\n</li>\n<li><p><strong>If content can not be found in the current tutorial and is not covered in previous tutorials, please let me know.</strong></p>\n</li>\n<li><p>This notebook has been optimized for Google Colabs ran on a Chrome Browser. </p>\n</li>\n<li><p>Statements found in the index page on view expressed, responsibility, errors and ommissions, use at risk, and licensing  extend throughout the tutorial.</p>\n</li>\n</ul>\n <h4 id=\"objectives\"><strong>Objectives</strong></h4>\n<p> By the end of this tutorial users should have an understanding of:</p>\n<ul>\n<li><p>Importing data with pandas and geopandas</p></li>\n<li><p>Querying data from Esri</p></li>\n<li><p>Retrieveing data programmatically</p></li>\n<li><p>This module assumes the data needs no handling prior to intake</p></li>\n<li><p>Loading data in a variety of formats</p></li>\n<li><p>Visualizing said data</p></li>\n</ul>\n <h2 id=\"usage-instructions\">Usage Instructions</h2>\n <h3 id=\"install-the-package\">Install the Package</h3>\n <p>The code is on <a href=\"https://pypi.org/project/test-template/\" onclick=\"window.sendPing(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">PyPI</a> so you can install the scripts as a python library using the command:</p>\n<p> <code>!pip install dataplay geopandas</code></p>\n <blockquote>\n<p>Important: Contributers should follow the maintanance instructions and will not need to run this step. </p>\n<p>Their modules will be retrieved from the VitalSigns-GDrive repo they have mounted into their Colabs Enviornment. </p>\n</blockquote>\n  <p>Then...</p>\n <h3 id=\"import-modules\">Import Modules</h3>\n <ol>\n<li><p>Import the installed module into your code:</p></li>\n</ol>\n<pre><code>from VitalSigns.acsDownload import retrieve_acs_data \n</code></pre>\n<ol start=\"2\">\n<li><p>use it</p></li>\n</ol>\n<pre><code>retrieve_acs_data(state, county, tract, tableId, year, saveAcs)\n</code></pre>\n<p> Now you could do something like merge it to another dataset! </p>\n<pre><code>from dataplay.merge import mergeDatasets\nmergeDatasets(left_ds=False, right_ds=False, crosswalk_ds=False,  use_crosswalk = True, left_col=False, right_col=False, crosswalk_left_col = False, crosswalk_right_col = False, merge_how=False, interactive=True)\n</code></pre>\n <h3 id=\"getting-help\">Getting Help</h3>\n <p>You can get information on the package, modules, and methods by using the help command.</p>\n <p>Here we look at the package&#39;s modules:</p>\n help(dataplay) Help on package dataplay:\n\nNAME\n    dataplay\n\nPACKAGE CONTENTS\n    _nbdev\n    corr\n    geoms\n    gifmap\n    html\n    intaker\n    merge\n\nVERSION\n    0.0.28\n\nFILE\n    /usr/local/lib/python3.7/dist-packages/dataplay/__init__.py\n\n\n <p>Lets take a look at what functions the geoms module provides:</p>\n help(dataplay.geoms)  Help on module dataplay.geoms in dataplay:\n\nNAME\n    dataplay.geoms - # AUTOGENERATED! DO NOT EDIT! File to edit: notebooks/03_Map_Basics_Intake_and_Operations.ipynb (unless otherwise specified).\n\nFUNCTIONS\n    map_points(data, lat_col='POINT_Y', lon_col='POINT_X', zoom_start=11, plot_points=True, cluster_points=False, pt_radius=15, draw_heatmap=False, heat_map_weights_col=None, heat_map_weights_normalize=True, heat_map_radius=15, popup=False)\n        Creates a map given a dataframe of points. Can also produce a heatmap overlay\n        \n        Arg:\n            df: dataframe containing points to maps\n            lat_col: Column containing latitude (string)\n            lon_col: Column containing longitude (string)\n            zoom_start: Integer representing the initial zoom of the map\n            plot_points: Add points to map (boolean)\n            pt_radius: Size of each point\n            draw_heatmap: Add heatmap to map (boolean)\n            heat_map_weights_col: Column containing heatmap weights\n            heat_map_weights_normalize: Normalize heatmap weights (boolean)\n            heat_map_radius: Size of heatmap point\n        \n        Returns:\n            folium map object\n    \n    readInGeometryData(url=False, porg=False, geom=False, lat=False, lng=False, revgeocode=False, save=False, in_crs=4326, out_crs=False)\n        # reverseGeoCode, readFile, getGeoParams, main\n    \n    workWithGeometryData(method=False, df=False, polys=False, ptsCoordCol=False, polygonsCoordCol=False, polyColorCol=False, polygonsLabel='polyOnPoint', pntsClr='red', polysClr='white', interactive=False)\n        # Cell\n        #\n        # Work With Geometry Data\n        # Description: geomSummary, getPointsInPolygons, getPolygonOnPoints, mapPointsInPolygons, getCentroids\n\nDATA\n    __all__ = ['workWithGeometryData', 'map_points', 'readInGeometryData']\n\nFILE\n    /usr/local/lib/python3.7/dist-packages/dataplay/geoms.py\n\n\n <p>And here we can look at an individual function and what it expects:</p>\n help(VitalSigns.acsDownload.retrieve_acs_data) Help on function retrieve_acs_data in module VitalSigns.acsDownload:\n\nretrieve_acs_data(state, county, tract, tableId, year, save)\n\n <h2 id=\"examples\">Examples</h2>\n <h4 id=\"examples\">Examples</h4>\n <p>So heres an example:</p>\n<p> Import your modules</p>\n   <p>Read in some data</p>\n <p>Define our download parameters.</p>\n<p> More information on these parameters can be found in the tutorials!</p>\n county = '510'\n state = '24'\n tableId = 'B19001'\n year = '17'\n saveAcs = False <p>And download the Baltimore City ACS data using the imported VitalSigns library.</p>\n   <p>Here we can import and display a geospatial dataset with special intake requirements.</p>\n <p>Here we pull a list of Baltimore Cities CSA&#39;s</p>\n   <p>Now in this example we will load in a bunch of coorinates</p>\n geoloom_gdf = dataplay.geoms.readInGeometryData(url=geoloom_gdf_url, porg=False, geom='geometry', lat=False, lng=False, revgeocode=False,  save=False, in_crs=4326, out_crs=False)\n geoloom_gdf = geoloom_gdf.dropna(subset=['geometry'])\n # geoloom_gdf = geoloom_gdf.drop(columns=['POINT_X','POINT_Y'])\n geoloom_gdf.head(1) <p>And here we get the number of <strong>points</strong> <strong>in</strong> each of our corresponding CSAs (<strong>polygons</strong>)</p>\n  <p>And we plot it with a legend</p>\n  <p>What were to happen if I wanted to create a interactive click map with the label of each csa (<strong>polygon</strong>) <strong>on</strong> each <strong>point</strong>?</p>\n <p>Well we just run the reverse operation!</p>\n   <p>And then we can visualize it like:</p>\n                pt_radius=1, draw_heatmap=True, heat_map_weights_col=None, heat_map_weights_normalize=True,\n                heat_map_radius=15, popup='CSA2010')  <p>These interactive visualizations can be exported to html using a tool found later in this document. </p>\n<p> Its how I made this page!</p>\n <p>If you like what you see, there is more in the package you will just have to explore. </p>\n <h2 align=\"left\">Have Fun!</h2>\n <img src=\"https://bniajfi.org/images/mermaid/vitalSignsCorrelations.png\" width=\"500px\">\n <img src=\"https://bniajfi.org/images/mermaid/vitalSignsGif.gif\" width=\"500px\">"}