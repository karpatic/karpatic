{"meta":{"title":"Geom to Stl","summary":"Converting Geometry Data to STL Print outs.","toc":"true","prettify":"true","filename":"12_geom_to_stl_original"},"content":"<details open>\n <summary> <h2>About:</h2>\n </summary> <div id=\"viewer\"></div>  <h3>Whats inside?</h3>\n <p>In this notebook, we build a tool to convert geometry data to an STL, dynamically.</p>\n<ul>\n<li><p>A geojson map will be loaded in. </p></li>\n<li><p>It&#39;s shape will be simplified to be friendly with 3d printing.</p></li>\n<li><p>The shape will then be extruded and hollowed out at its base so we can put LED lights inside it.</p></li>\n<li><p>The boundary lines will be extruded and inserted into the hollow portion to create walls to prevent light bleaching.</p></li>\n<li><p>The boundary lines will be used to carve out lines on the top of the map for clarity</p></li>\n</ul>\n </details>\n <details open>\n <summary> <h2>The Function</h2>\n </summary> <style> \n   input{\n     position: unset;\n     width: 200px;\n   }\n </style>\n <form id = 'settingsForm'>\n   <div>\n     <label>\n       <input name=\"geom\" type=\"text\" value=\"https://services1.arcgis.com/mVFRs7NF4iFitgbY/ArcGIS/rest/services/Tpop/FeatureServer/0/query?where=1%3D1&outFields=*&returnGeometry=true&f=pgeojson\"> \n        <!-- <input name=\"geom\" type=\"text\" value=\"https://raw.githubusercontent.com/benbalter/dc-maps/master/maps/ward-2012.geojson\"> -->\n       <i>GeoJson URL</i>\n     </label>  \n   </div> \n   <div>\n     <label>\n       <input name=\"simplifyBy\" type=\"number\" value=\"0.0168\" min=\"0\" max=\"1\" step=\".0001\">\n       <i>Simplify By</i>\n     </label>\n   </div> \n   <div id=\"display_map\"></div>\n   <!-- \n   <div>\n     <label>\n       <-- <input name=\"label\" type=\"text\" value=\"CSA2010\"> ->\n       <input name=\"label\" type=\"text\" value=\"WARD\"> \n       <i>Label Column</i>\n     </label>\n   </div> \n   <div>\n     <label>\n       <input name=\"convex\" type=\"text\" value=\"DC\"> \n       <i>Convex Hull Label</i>\n     </label>\n   </div> \n   <div>\n     <label>\n       <!- <input name=\"feature\" type=\"text\" value=\"name\"> ->\n       <input name=\"feature\" type=\"text\" value=\"WARD\"> \n       <i>Feature</i>\n     </label>\n   </div> \n   <div>\n     <label>\n       <input name=\"weight\" type=\"number\" value=0.025> \n       <i>Weight 0 - .05</i>\n     </label>\n   </div> \n     -->\n   <div>\n     <label>\n       <input name=\"depth\" type=\"number\" value=\"5\">\n       <i>Depth</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"wallHeight\" type=\"number\" value=\"100\">\n       <i>Wall Height</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"exteriorWallHeight\" type=\"number\" value=\"140\">\n       <i>Exterior Wall Height</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"exteriorLineWidth\" type=\"number\" value=\"10\">\n       <i>Exterior Line Width</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"interiorLineWidth\" type=\"number\" value=\"5\">\n       <i>Interior Line Width</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"engraveWidth\" type=\"number\" value=\"7\">\n       <i>Engrave Width</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"engraveZpos\" type=\"number\" value=\"7.5\">\n       <i>Engrave Z Position</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"stretchFactor\" type=\"number\" value=\"1.25\">\n       <i>Stretch Factor</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"stepMultiply\" type=\"number\" value=\"5\">\n       <i>Step Multiply</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"precision\" type=\"number\" value=\"1000\">\n       <i>Precision</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"scaleToThisSize\" type=\"number\" value=\"180\">\n       <i>Scale To This Size</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"width\" type=\"number\" value=\"600\">\n       <i>Width</i>\n     </label>\n   </div>\n   <div>\n     <label>\n       <input name=\"height\" type=\"number\" value=\"600\">\n       <i>Height</i>\n     </label>\n   </div>\n   <div>\n     <button type=\"submit\">Submit</button>\n   </div>\n </form> <!-- Leaflet -->\n <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.css\"/>\n \n <script src=\"https://unpkg.com/leaflet@1.9.4/dist/leaflet.js\"></script> \n <!-- Turf -->\n <script src='https://unpkg.com/@turf/turf@6/turf.min.js'></script>\n <!-- TopoJSON-Client -->\n <script src=\"https://cdn.jsdelivr.net/npm/topojson-client@3\"></script>\n <!-- TopoJSON-Simplify -->\n <script src=\"https://cdn.jsdelivr.net/npm/topojson-simplify@3\"></script>\n <!-- TopoJSON-Server -->\n <script src=\"https://cdn.jsdelivr.net/npm/topojson-server@3\"></script> \n <script src=\"https://cdnjs.cloudflare.com/ajax/libs/proj4js/2.6.2/proj4.js\"></script> \n <style>\n  #display_map { width: 600px; height: 600px; }\n </style>  <script type=\"module\"> \n import { displayMap, initialize } from '/cdn/meshmaps_original.js'; \n \n window.formValues = {}; \n document.querySelector('form').querySelectorAll('input').forEach(input => {\n     const name = input.getAttribute('name');\n     const value = input.type === 'number' ? parseFloat(input.value) : input.value;\n     formValues[name] = value;\n });\n \n function updateWindowValues() {\n   const form = document.getElementById('settingsForm');\n   form.querySelectorAll('input').forEach(input => {\n     const name = input.getAttribute('name');\n     const value = input.type === 'number' ? parseFloat(input.value) : input.value;\n     window[name] = value;\n   });\n }\n  \n \n function handleFormSubmit(event) {\n   event.preventDefault(); // Prevent the default form submission behavior\n   updateWindowValues();\n   displayMap();\n   initialize(); // Call initialize after updating window values\n }\n document.getElementById('settingsForm').addEventListener('submit', handleFormSubmit);\n \n function handleInputChange(event) {\n   updateWindowValues();\n   displayMap(); // Call initialize again after updating window values\n }\n document.querySelector('[name=\"geom\"]').addEventListener('change', handleInputChange);\n document.querySelector('[name=\"simplifyBy\"]').addEventListener('change', handleInputChange);\n \n   updateWindowValues();\n   displayMap();\n   initialize();\n \n </script> </details>\n <details open>\n <summary> <h2>Result</h2>\n </summary> <div id='renderer'></div> </details>\n  <script src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdn.rawgit.com/google/code-prettify/master/styles/desert.css\"/>\n  "}