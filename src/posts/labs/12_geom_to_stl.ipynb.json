{"meta":{"title":"Geom to Stl","summary":"Converting Geometry Data to STL Print outs.","toc":"true","prettify":"true","filename":"12_geom_to_stl.ipynb"},"content":"<details open>\n <summary> <h2 id=\"about\">About:</h2>\n </summary> <h3 id=\"whats-inside\">Whats inside?</h3>\n <p>In this notebook, we build a tool to convert geometry data to an STL, dynamically.</p>\n<ul>\n<li><p>A geojson map will be loaded in. </p></li>\n<li><p>It&#39;s shape will be simplified to be friendly with 3d printing.</p></li>\n<li><p>The shape will then be extruded and hollowed out at its base so we can put LED lights inside it.</p></li>\n<li><p>The boundary lines will be extruded and inserted into the hollow portion to create walls to prevent light bleaching.</p></li>\n<li><p>The boundary lines will be used to carve out lines on the top of the map for clarity</p></li>\n</ul>\n </details>\n <details open>\n <summary> <h2 id=\"the-function\">The Function</h2>\n </summary> <form>\n   <div><label><input name=\"geom\" type=\"text\" value=\"https://services1.arcgis.com/mVFRs7NF4iFitgbY/ArcGIS/rest/services/Tpop/FeatureServer/0/query?where=1%3D1&outFields=*&returnGeometry=true&f=pgeojson\"> <i>GeoJson URL</i></label></div> \n   <div><label><input name=\"label\" type=\"text\" value=\"CSA2010\"> <i>Label Column</i></label></div> \n   <div><label><input name=\"convex\" type=\"text\" value=\"Baltimore City\"\"> <i>Convex Hull Label</i></label></div> \n <div><label><input name=\"feature\" type=\"text\" value=\"name\"> <i>Feature</i></label></div> \n <div><label><input name=\"weight\" type=\"number\" value=0.025> <i>Weight 0 - .05</i></label></div> \n </form>  <script>let width = 600\nlet height = width\n</script> </details>\n <details open>\n <summary> <h2 id=\"try-it\">Try it</h2>\n </summary>    <a src='$C:/Users/charl/Documents/GitHub/karpatic/src/ipynb/dataplay/tracts_data.csv'>Link</a>\n <pre class='prettyprint'>df = Intake.getData(url, interactive=True)</pre> <p>And the same thing works without a url</p>\n  <a src='$https://services1.arcgis.com/mVFRs7NF4iFitgbY/ArcGIS/rest/services/Hhchpov/FeatureServer/0/query?where=1%3D1&outFields=*&returnGeometry=true&f=pgeojson'>Link</a>\n <pre class='prettyprint'>rdf = Intake.getData(url) </pre> <p>Using Esri and the Geoms handler directly:</p>\n   <a src='$https://services1.arcgis.com/mVFRs7NF4iFitgbY/ArcGIS/rest/services/Hhpov/FeatureServer/0/query?where=1%3D1&outFields=*&returnGeometry=true&f=pgeojson'>Link</a>\n <pre class='prettyprint'>geoloom_gdf = dataplay.geoms.readInGeometryData(\n     url=geoloom_gdf_url, \n     porg=False, \n     geom='geometry', \n     lat=False, \n     lng=False, \n     revgeocode=False,  \n     save=False, \n     in_crs=4326, \n     out_crs=False\n )</pre>  <p>Again but with the Intake class:</p>\n  <a src='$https://services1.arcgis.com/mVFRs7NF4iFitgbY/ArcGIS/rest/services/Geoloom_Crowd/FeatureServer/0/query?where=1%3D1&outFields=*&returnGeometry=true&f=pgeojson'>Link</a>\n <pre class='prettyprint'>Geoloom_Crowd, rcol = Intake.getAndCheck(url)</pre> <p>This getAndCheck function is useful for checking for a required field.</p>\n  <a src='$https://services1.arcgis.com/mVFRs7NF4iFitgbY/ArcGIS/rest/services/Hhpov/FeatureServer/0/query?where=1%3D1&outFields=*&returnGeometry=true&f=pgeojson'>Link</a>\n <pre class='prettyprint'>Hhpov, rcol = Intake.getAndCheck(url, 'hhpov19', True) </pre>  <pre class='prettyprint'># Hhpov.to_csv('Hhpov.csv').to_csv('Hhpov.csv', encoding=\"utf-8\", index=False, quoting=csv.QUOTE_ALL)</pre> <p>We could also retrieve from a file.</p>\n <pre class='prettyprint'># rdf = Intake.getData('Hhpov.csv')</pre> </details>\n  <script src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdn.rawgit.com/google/code-prettify/master/styles/desert.css\"/>\n  "}