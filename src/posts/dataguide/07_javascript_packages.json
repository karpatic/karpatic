{"meta":{"filename":"07_javascript_packages","title":"Javascript Packages","summary":"Unique notes about Javascript package creation. Aggregated from a collection of sources.","toc":"true"},"content":"<p>⚠️ This writing is a work in progress.⚠️</p>\n <div class=\"unset\">\n   <style>\n   .unset{padding:0px;}\n   .unset p a img {\n     width: auto;\n   }\n   .unset p{ margin:10px;}\n   </style> <p><a href=\"https://mybinder.org/v2/gh/bnia/dataguide/main?filepath=%2Fnotebooks%2F07_Javascript_Packages.ipynb\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://mybinder.org/badge_logo.svg\" alt=\"Binder\"></a>\n <a href=\"https://colab.research.google.com/github/bnia/dataguide/blob/main/notebooks/07_Javascript_Packages.ipynb\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://pete88b.github.io/fastpages/assets/badges/colab.svg\" alt=\"Binder\"></a>\n <a href=\"https://github.com/bnia/dataguide/tree/main/notebooks/07_Javascript_Packages.ipynb\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://pete88b.github.io/fastpages/assets/badges/github.svg\" alt=\"Binder\"></a>\n <a href=\"https://github.com/ellerbrock/open-source-badges/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://badges.frapsoft.com/os/v3/open-source.svg?v=103\" alt=\"Open Source Love svg3\"></a></p>\n<p> <a href=\"https://github.com/bnia/dataguide/blob/main/LICENSE\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/npm/l/all-contributors.svg?style=flat\" alt=\"NPM License\"></a>\n <a href=\"https://bnia.github.io\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"http://img.shields.io/badge/Status-Active-green.svg\" alt=\"Active\"></a> \n <a href=\"\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/last-commit/bnia/dataguide.svg?style=flat\" alt=\"GitHub last commit\"></a>  </p>\n<p> <a href=\"https://github.com/bnia/dataguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/stars/bnia/dataguide.svg?style=social&label=Star\" alt=\"GitHub stars\"></a> \n <a href=\"https://github.com/bnia/dataguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/watchers/bnia/dataguide.svg?style=social&label=Watch\" alt=\"GitHub watchers\"></a> \n <a href=\"https://github.com/bnia/dataguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/forks/bnia/dataguide.svg?style=social&label=Fork\" alt=\"GitHub forks\"></a> \n <a href=\"https://github.com/bnia/dataguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/followers/bnia.svg?style=social&label=Follow\" alt=\"GitHub followers\"></a> </p>\n<p> <a href=\"https://twitter.com/intent/tweet?text=Check%20out%20this%20%E2%9C%A8%20colab%20by%20@bniajfi%20https://github.com/bnia/dataguide%20%F0%9F%A4%97\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/twitter/url/https/github.com/bnia/dataguide.svg?style=social\" alt=\"Tweet\"></a> \n <a href=\"https://twitter.com/bniajfi\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/twitter/follow/bniajfi.svg?style=social\" alt=\"Twitter Follow\"></a></p>\n </div> <h2 id=\"packages-and-modules\">Packages and <a href=\"https://docs.npmjs.com/about-packages-and-modules#about-modules\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Modules</a></h2>\n <p>The following content was pulled from the link in the section header.</p>\n <p>NPMJS <a href=\"https://npmjs.com\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">website</a> is very clear on these two things:</p>\n <blockquote>\n<p>A package is a file or directory that is described by a package.json file. A package must contain a package.json file in order to be published to the npm registry.\n  A package is any of the following:</p>\n</blockquote>\n<ul>\n<li><div>a) A folder containing a program described by a package.json file.</div></li>\n<li><div>b) A gzipped tarball containing (a).</div></li>\n<li><div>c) A URL that resolves to (b).</div></li>\n<li><div>d) A git url that, when cloned, results in (a).</div></li>\n</ul>\n <blockquote>\n<p>A module is any file or directory in the node_modules directory that can be loaded by the Node.js require() function.  </p>\n<p>To be loaded by the Node.js require() function, a module must be one of the following:</p>\n<p>A folder with a package.json file containing </p>\n</blockquote>\n<ul>\n<li><div>a &quot;main&quot; field.</div></li>\n<li><div>A folder with an index.js file in it.</div></li>\n<li><div>A JavaScript file.</div></li>\n</ul>\n <blockquote>\n<p>In the context of a Node program, the module is also the thing that was loaded from a file. For example, in the following program: - <a href=\"https://docs.npmjs.com/about-packages-and-modules#about-modules\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://npmjs.com</a></p>\n</blockquote>\n <blockquote>\n<p>Note: Since modules are not required to have a package.json file, not all modules are packages. Only modules that have a package.json file are also packages.</p>\n</blockquote>\n <p>As well its good to know that:</p>\n <pre class='prettyprint'> &lt;!-- This will not execute, as it fails a CORS check --&gt;\n &lt;script type=&quot;module&quot; src=&quot;https://….now.sh/no-cors&quot;&gt;&lt;/script&gt;\n \n &lt;!-- This will not execute, as one of its imports fails a CORS check --&gt;\n &lt;script type=&quot;module&quot;&gt; import &#39;https://….now.sh/no-cors&#39;; &lt;/script&gt;\n \n &lt;!-- This will execute as it passes CORS checks --&gt;\n &lt;script type=&quot;module&quot; src=&quot;https://….now.sh/cors&quot;&gt;&lt;/script&gt;\n</pre>\n <p>and that</p>\n<p> Node modules do not add to the global scope without explicetly being pointed to. I.E. &#39;window.variable = hahaha&#39;</p>\n <h2 id=\"example-create-nodejs-modules\">Example: <a href=\"https://docs.npmjs.com/creating-node-js-modules\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Create</a> Node.js Modules</h2>\n <p>The following content was pulled from the link in the section header</p>\n <ol>\n<li><div>Create a package.json file</div></li>\n</ol>\n<ul>\n<li><div>create a package.json file : &#39;npm init&#39;</div></li>\n<li><div>required fields: name, version, &#39;main&#39; fields</div></li>\n<li><div>The default name is index.js.</div></li>\n</ul>\n<ol start=\"2\">\n<li><div>Create the file that will be loaded when your module is required by another application</div></li>\n</ol>\n<ul>\n<li><p>Once your package.json file is created, create the file that will be loaded when your module is required. The default name for this file is index.js.</p>\n</li>\n<li><p>In the file, add a function as a property of the exports object. This will make the function available to other code:</p>\n</li>\n</ul>\n<p> &#39;&#39;&#39;exports.printMsg = function() {\n   console.log(&quot;This is a message from the demo package&quot;);\n }&#39;&#39;&#39;</p>\n<ol start=\"3\">\n<li><div>Test your module</div></li>\n</ol>\n<ul>\n<li><div>Publish: &quot;npm publish --access public&quot;</div></li>\n<li><div>mkdir test-directory</div></li>\n<li><div>cd ../path/to/test-directory</div></li>\n<li><div>npm install <your-module-name></div></li>\n<li><div>create a test.js file which requires your module and calls your module as a method.</div></li>\n</ul>\n<p> &quot;var req = require(&#39;request&#39;)&quot;</p>\n<ul>\n<li><div>On the command line, run node test.js. The message sent to the console.log should appear.</div></li>\n</ul>\n <h2 id=\"example-publish-to-npm\">Example: <a href=\"https://zellwk.com/blog/publish-to-npm/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Publish</a> to NPM</h2>\n <p>The following content was pulled from the link in the section header</p>\n mkdir how-to-publish-to-npm cd how-to-publish-to-npm !npm init <p>Heres an <a href=\"https://philipwalton.com/articles/using-native-javascript-modules-in-production-today/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">article</a> with more instructions and best practices.</p>\n <h2 id=\"packagejson-to-use-git-gists\">Package.json to use Git Gists</h2>\n <p>Git URLs used for npm packages can be formatted in the following ways:</p>\n<ul>\n<li><div>git://github.com/user/project.git#commit-ish</div></li>\n<li><div>git+ssh://user@hostname:project.git#commit-ish</div></li>\n<li><div>git+<a href=\"http://user@hostname/project/blah.git#commit-ish\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">http://user@hostname/project/blah.git#commit-ish</a></div></li>\n<li><div>git+<a href=\"https://user@hostname/project/blah.git#commit-ish\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://user@hostname/project/blah.git#commit-ish</a></div></li>\n</ul>\n<p> The commit-ish can be any tag, sha, or branch that can be supplied as an argument to git checkout. The default commit-ish is master.</p>\n <h2 id=\"python-github-gist-javascript\">Python Github Gist Javascript</h2>\n <p>Save a Github Gist using Python.  </p>\n def readFile(filename):\n   f = open(filename, 'r')\n   content = f.read()\n   f.close()\n   return content\n \n def getFile(url, savesAs, filename):\n   responce = \"wget \"+url+\" ; mv \"+savesAs+\" \"+filename+\"; \"\n   os.system(responce)\n \n def displayCode(url, savesAs, filename):\n   getFile(url, savesAs, filename) \n   display(IPython.display.Javascript( readFile(filename) ) )\n \n def getGitGist(url, folderPath, gistName, filename):\n   responce = \"git clone {}; mv {}/{} {}; rm {} -r\".format(url, folderPath, gistName, filename, folderPath);\n   os.system(responce)\n \n def displayGitGist(url, folderPath, gistName, filename):\n   getGitGist(url, folderPath, gistName, filename)\n   display(IPython.display.Javascript( readFile(filename) ) )\n folderPath = 'c7b95a99dea7a19ceb9a366f0ef2a1ce'\n gistName = 'HelloWorldGist'\n filename = 'gitgist.js'\n displayGitGist(url, folderPath, gistName, filename) <h2 id=\"observablehq-modules\">ObservableHQ Modules</h2>\n <p>You can use ObservableHQ to create test and export JS Modules</p>\n <p>Here are some more notes on it:</p>\n <p><a href=\"https://observablehq.com/@observablehq/five-minute-introduction\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Introduction</a> <a href=\"https://observablehq.com/@observablehq/introduction-to-require\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Require</a> <a href=\"https://observablehq.com/@observablehq/downloading-and-embedding-notebooks\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Embedding</a> <a href=\"https://observablehq.com/@observablehq/introduction-to-html\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">HTML</a></p>\n <p>And and embedding example:</p>\n <h2 id=\"modules-in-the-browser\">Modules in the browser</h2>\n import IPython\n def readFile(filename):\n   f = open(filename, 'r')\n   content = f.read()\n   f.close()\n   return content\n \n def getFile(url, savesAs, filename):\n   responce = \"wget \"+url+\" ; mv \"+HelloWorldGist+\" \"+filename+\"; \"\n   os.system(responce)\n \n def displayCode(url, savesAs, filename):\n   getFile(url, savesAs, filename) \n   display(IPython.display.Javascript( readFile(filename) ) )\n \n def getGitGist(url, folderPath, gistName, filename):\n   responce = \"git clone {}; mv {}/{} {}; rm {} -r\".format(url, folderPath, gistName, filename, folderPath);\n   os.system(responce)\n \n def displayGitGist(folderPath, gistName, filename):\n   url = 'https://gist.github.com/'+ folderPath +'.git'\n   getGitGist(url, folderPath, gistName, filename)\n   # return getFile(url, filename, filename)\n   display(IPython.display.Javascript( readFile(filename) ) )\n gistName = 'HelloWorldGist'\n filename = 'index.js'\n displayGitGist(folderPath, gistName, filename) IPython.display.HTML(filename=\"./index.html\") <p>Safari, Chrome, Firefox and Edge all support the ES6 Modules import syntax.</p>\n <p>If you want to load ES modules on a different domain, you’ll need to enable CORS.</p>\n<p> Some <a href=\"https://usefulangle.com/post/256/script-type-module-vs-script-javascript\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">more</a> on that:</p>\n <blockquote>\n<p>For information on using module, see our JavaScript modules guide. Unlike classic scripts, module scripts require the use of the CORS protocol for cross-origin fetching - <a href=\"https://javascript.info/modules-intro\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">javascript.info</a></p>\n</blockquote>\n<blockquote>\n<p>Scripts without async , defer or type=&quot;module&quot; attributes, as well as inline scripts, are fetched and executed immediately, before the browser continues to parse the page.</p>\n<p>The script should be served with the text/javascript MIME type, but browsers are lenient and only block them if the script is served with an image type (image/<em>); a video type (video/</em>); an audio (audio/*) type; or text/csv. If the script is blocked, an error is sent to the element, if not a load event is sent. - <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">script</a></p>\n</blockquote>\n"}