:root {
  --radial1: radial-gradient(
      at 52% 13%,
      hsla(215, 77%, 79%, 1) 0px,
      transparent 50%
    ),
    radial-gradient(at 40% 33%, hsla(173, 63%, 76%, 1) 0px, transparent 50%),
    radial-gradient(at 15% 92%, hsla(166, 97%, 69%, 1) 0px, transparent 50%),
    radial-gradient(at 97% 78%, hsla(229, 94%, 76%, 1) 0px, transparent 50%),
    radial-gradient(at 19% 52%, hsla(27, 99%, 69%, 1) 0px, transparent 50%),
    radial-gradient(at 68% 16%, hsla(339, 76%, 78%, 1) 0px, transparent 50%),
    radial-gradient(at 25% 1%, hsla(202, 73%, 63%, 1) 0px, transparent 50%);
  /* transparent text w animated lin gradient bg */


  /* shadows should double blur than their y's */
  /* Borders should contrast both interior and int/exterior of container */
  --filterdropshadowover: drop-shadow(4px 4px 10px rgb(var(--foreground)));
  --filterdropshadowunder: drop-shadow(4px -4px 1px rgb(var(--background)));

  /* Footer Bars, Overwritten with js */
  --path1: path("M 0 0 L 0 2 L 0 0");
  --path2: 0;

  /*Foot and Header Gradients And Shadows */
  --bgheader: linear-gradient(
    70deg,
    rgba(var(--background), 0.5),
    rgba(var(--foreground), 0.5),
    rgba(var(--background), 0.5)
  );
  --bgfooter: linear-gradient(
    70deg,
    rgba(var(--background), 0.6),
    rgba(var(--foreground), 0.6),
    rgba(var(--background), 0.6)
  );
}
h1 > a::selection {
  color: rgb(var(--near-black));
}
h1 > a {
  background: linear-gradient(
    90deg,
    rgb(var(--near-black)),
    rgba(var(--near-black), 0.4),
    rgb(var(--near-black)),
    rgba(var(--near-black), 0.4)
  );
  background-size: 300% 100%;
  background-clip: text;
  color: transparent;
  animation: gradient 5s ease infinite;
}
@keyframes gradient {
  0% {
    background-position: 0% 0%;
  }
  50% {
    background-position: 100% 100%;
  }
  100% {
    background-position: 0% 0%;
  }
}
h2 {
  filter: url(#header);
}
 

#header {
  /* center and size to header_nav*/
  width: fit-content;
  margin: 60px auto 30px auto;
  padding: 12px;
  text-align: center;
  z-index: 9;
}
#header_bg_wrapper {
  position: absolute;
  top: 0px;
  width: 100%;
  height: 100%;
  filter: var(--filterdropshadowover);
}
#header_bg {
  border-radius: 50px;
  width: 100%;
  height: 100%;
  background: var(--bgheader);
  clip-path: polygon(
    33% 38%,
    0 43%,
    0 0,
    100% 0,
    100% 43%,
    66% 38%,
    66% 46%,
    100% 60%,
    100% 100%,
    0 100%,
    0 60%,
    33% 46%
  );
  animation: spin-header 1s linear alternate infinite;
  transition-duration: 2s;
}
#header:hover #header_bg {
  clip-path: polygon(
    0% 15%,
    15% 15%,
    15% 0%,
    85% 0%,
    85% 15%,
    100% 15%,
    100% 85%,
    85% 85%,
    85% 100%,
    15% 100%,
    15% 85%,
    0% 85%
  );
}
@keyframes spin-header {
  from {
    transform: rotate(-4deg);
  }
  to {
    transform: rotate(4deg);
  }
}
@keyframes wiggle {
  /*used by intersection observer in main.js*/
  0% {
    transform: translate(0, 0);
  }
  50% {
    transform: translate(5px, 0);
  }
  100% {
    transform: translate(0, 0);
  }
}

.controls_container {
  display: flex;
  width: min(100vw, 800px);
  margin: 0px auto 30px auto;
  padding: 0px 25px;
  justify-content: space-between;
  align-items: flex-end;
  flex-wrap: wrap;
}

#footer {
  height: 200px;
  width: min(100vw, 800px);
  margin: 30px auto 0px auto;
  display: flex;
  align-items: flex-end;
  justify-content: center;
}
#thanks {
  color: rgb(var(--near-black));
  font-size: 1.25em;
  padding: 10px;
  text-align: center;
}
#thanks a {
  font-size: 0.75em;
}
#footer_bg_wrapper {
  position: absolute;
  top: 0px;
  z-index: -1;
  width: 100%;
  height: 100%;
  filter: var(--filterdropshadowunder);
}
#footer_bg {
  /* This is the animation */
  width: 100%;
  height: 100%;
  background: var(--bgfooter);
}

#content {
  max-width: var(--max-width);
  margin: auto;
}

#content img {
  max-width: -webkit-fill-available;
}

details > details,
#content > div > *,
#content > * {
  padding: 12px 0px 12px 16px;
  margin: 0px;
}
#content > div{ padding: 0px; }

details > details {
  border-left: 1px solid rgb(var(--near-black));
}
@media only screen and (max-width: 769px) {
  details > details,
  #content > * {
    padding-right: 2px;
  }
  #content {
    border-width: 28px 0px 28px 8px;
  }
  #head_separator {
    display: none;
  }
  .notebox:checked + aside {
    flex-direction: column-reverse;
    align-items: flex-end;
  }
  #breadcrumbs {
    padding-bottom: 10px;
  }
}

.twitter-tweet {
  margin: auto;
}

#light,
#expand,
.notelbl {
  cursor: pointer;
}
#light::before {
  content: "🌜 Dark mode";
  display: block;
}
html:has(#lightmode:checked) {
  filter: invert(100%);
}
html:has(#lightmode:checked) #light::before {
  content: "🌞 Light mode";
}

#audio {
  display: flex;
  align-items: center;
  margin: 0 0 0 -7px;
}
audio {
  height: 40px;
  margin-left: -6px;
}
audio::-webkit-media-controls-panel {
  background: rgba(var(--background), 0.5);
}
#audio > span {
  border-radius: 50%;
  width: 40px;
  height: 40px;
  overflow: hidden;
  display: inline-block;
  margin-right: 5px;
}
.notelbl {
  color: rgb(var(--near-black));
}
aside {
  border: solid rgb(var(--near-black));
  border-width: 10px 2px 0px 2px;
  border-radius: 7% 7% 0% 0%;
  box-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);
  background: rgb(var(--canvas));
  padding: 20px;
  z-index: 1;
  margin:auto;
}
aside,
.notebox {
  display: none;
}
.tip,.info,.warning{display:flex; align-items:center;
  border: black; color:rgb(var(--near-white));
  border-radius: 5% 5% 5% 5%;
}
.tip >*,.info >*,.warning >*{ display: inline; }
.tip a,.info a,.warning a{ color:rgb(var(--near-white)) }
aside.tip::before, aside.info::before, aside.warning::before{font-size:1.5em;  display:inline-block; margin:10px 20px;}
aside.tip::before{content:"💡";}
aside.info::before{content:"ℹ️";}
aside.warning::before{content:"⚠️";}
aside.tip{background:rgba(var(--near-black),1);}
aside.info{background:rgba(8, 122, 187,1)}
aside.warning{background:rgba(139, 0, 0, 1);}

.notebox:checked + p + aside {
  display: block;
}
.notebox:checked + p + aside > .notelbl:after{
/*.notebox:checked + p > .notelbl:after {*/
  content: " [X]";
}

#expand::before {
  content: "➕ Expand notes";
}
body:has(#expandmode:checked) #expand::before {
  content: "➖ Collapse notes";
}
body:has(#expandmode:checked) aside {
  display: block;
}

#toast_container {
  display: flex;
  bottom: 15%;
  position: fixed;
  transform: scale(0);
  width: 100vw;
  z-index: 1;
  justify-content: center;
}
#toast_container > p {
  padding: 10px;
  border-radius: 50px;
  width: fit-content;
  background: rgb(var(--near-black));
  color: rgb(var(--foreground));
}

@keyframes toast {
  0% {
    transform: scale(0);
  }
  20% {
    transform: scale(1);
  }
  80% {
    transform: scale(1);
  }
  100% {
    transform: scale(0);
  }
}

#page_transition {
  position: fixed;
  z-index: 100;
  opacity: 0;
  font-size: 1.25em;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  overflow: hidden;
  transform: translate(-50%, -50%) scale(0);
  border-radius: 50px;
  background: var(--radial1);
  background-size: 100% 200%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: rgb(var(--near-black));
}

@keyframes page_transition {
  0% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(0);
  }
  70% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}
