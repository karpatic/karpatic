{"meta":{"title":"Site Stats","summary":"Some fascinating details about my site you may have missed.","keywords":"['3D','3D Printing', 'Crypto', 'metaverse', 'navigation']","filename":"sitestats"},"content":"</details>\n <details open>\n <summary> <p>Fun Facts (for tech folk)</p>\n </summary> <ul>\n<li>Everything here was hand-written for optimal performance (((note:: This page is 99.99848% the size of googles homepage and loads 3.5 times faster - .2 seconds)))</li>\n<li>Pages were built for speed. Delivered in <a href=\"https://endtimes.dev/why-your-website-should-be-under-14kb-in-size/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">under 15kbs</a>, as a single html file, on a single line. Html renders first, then css, and then js(((note:: Near all JS <a href=\"https://krausest.github.io/js-framework-benchmark/current.html\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">frameworks</a> are over 15kb compressed. That&#39;s before even using it! ))).</li>\n</ul>\n<p> Sounds good? We are just getting started.</p>\n<ul>\n<li>It&#39;s a mobile-first JAMSTACK that supports multiple nested SPA&#39;s with each their own fallbacks, manifests, and service workers. </li>\n<li>It also boasts a perfect <a href=\"https://pagespeed.web.dev/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">lighthouse</a> score (((note:: Lighthouse wont check my PWA because the manifest and service worker are only loaded once a user navigates from the page)))</li>\n</ul>\n<p> But that&#39;s not even the half of it:</p>\n<ul>\n<li>The design is understated and soft. It has 15+ GPU accelerated animations and plenty of effects that all run at a cool, non-interrupting, 60fps.</li>\n<li>By default, pages are enhanced by, but not dependent on, JS. </li>\n<li>It also uses semantic html and was built with accessibility in mind.</li>\n<li>Webpack compresses every single assets during the build step and</li>\n<li>Each page gets prerendered and the loading script gets teased apart for optimal lazy loading or removal entirely(((note:: Typical rehydration strategies have got nothing on my loading strategy.)))</li>\n</ul>\n<p> Very considerate, I know. But wait! There&#39;s more!</p>\n<ul>\n<li>Relevant pages are SEO enriched using JSON-LD and are listed in the sitemap.txt file.</li>\n<li>I&#39;m using all the good meta tags. You know the ones ;)</li>\n</ul>\n<p> And here&#39;s the best part :D</p>\n<ul>\n<li>Content is pulled and converted, from IPYNB&#39;s to HTML using a mix of markdown and special syntax&#39;s. (((note:: Inspired by <a href=\"https://nbdev.fast.ai/\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">NbDev</a>, these footnotes are an example of special ipynb markup)))</li>\n<li>On a per-page basis, IPYNB frontmatter (YAML) is used for setting the template, meta-tags, progress bars, sitemaps, table of contents, and more.</li>\n<li>The use of IPYNB&#39;s also means I can publish exploratory analysis&#39;s effortlessly. Special tooling (((note:: There are lots of python libraries that spit out or export javascript. To name a few: Plotly, ObservableHQ, <a href=\"https://github.com/BNIA/dataplay\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">dataplay</a> (A mapping library I made using leaflet), and more! )))means the output can even be interactive online! But that typicaly breaks the 15kb size limits.</li>\n</ul>\n </details>"}