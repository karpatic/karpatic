{"meta":{"filename":"ml"},"content":"<p><strong>Non-standard predictors</strong> </p>\n<ul>\n<li><p>Nonlinear <a href=\"https://en.wikipedia.org/wiki/Nonlinear_regression\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">regression</a></p></li>\n<li><p><a href=\"https://en.wikipedia.org/wiki/Nonparametric_regression\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Nonparametric</a></p></li>\n</ul>\n <p><a href=\"https://scikit-learn.org/stable/supervised_learning.html#supervised-learning\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><strong>Classification</strong></a> Identifying to which category an object belongs to. \n <strong>Applications</strong> : Spam detection, Image recognition. </p>\n<p> <strong>Algorithms</strong> : </p>\n<ul>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/svm.html#svm-classification\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">SVM</a>- <a href=\"https://scikit-learn.org/stable/modules/neighbors.html#classification\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">nearest neighbors</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/ensemble.html#forest\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">random forest</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/auto_examples/index.html#general-examples\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Examples</a></p></li>\n</ul>\n<p> <strong>Classification</strong>:</p>\n<ul>\n<li><p>k-nearest neighbors - supervised</p>\n</li>\n<li><p>decision trees (c4.5) - supervised - noncontiguous, data is if/else</p>\n</li>\n<li><p>gradient boosted decision trees</p>\n</li>\n<li><p>Random Forest - Super/Unsuper - Best Split</p>\n</li>\n<li><p>classification and regresstion tree(cart)</p>\n</li>\n<li><p>SVM - Super/Unsuper - Maximum Margin</p>\n</li>\n<li><p>naive bayes - supervised</p>\n</li>\n</ul>\n <p><a href=\"https://scikit-learn.org/stable/supervised_learning.html#supervised-learning\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><strong>Regression</strong></a> Predicting a continuous-valued attribute associated with an object.</p>\n<ol>\n<li><p><strong>Applications</strong> : Drug response, Stock prices. </p>\n</li>\n<li><p><strong>Algorithms</strong> :</p>\n</li>\n</ol>\n<ul>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/svm.html#svm-regression\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">SVR</a>, - <a href=\"https://scikit-learn.org/stable/modules/linear_model.html#ridge-regression\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">ridge regression</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/linear_model.html#lasso\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Lasso</a></p></li>\n<li><p>Simple linear regression</p></li>\n<li><p>OLS</p></li>\n<li><p>GLM</p></li>\n<li><p>Bayesian regression </p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/auto_examples/index.html#general-examples\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Examples</a></p></li>\n</ul>\n <p><a href=\"https://scikit-learn.org/stable/modules/clustering.html#clustering\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Clustering</a> </p>\n<p> Automatic grouping of similar objects into sets.</p>\n<ol>\n<li><p><strong>Applications</strong> : Customer segmentation, Grouping experiment outcomes </p>\n</li>\n<li><p><strong>Algorithms</strong> :</p>\n</li>\n</ol>\n<ul>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/clustering.html#k-means\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">k-Means</a>- <a href=\"https://scikit-learn.org/stable/modules/clustering.html#spectral-clustering\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">spectral clustering</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/clustering.html#mean-shift\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">mean-shift</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/auto_examples/index.html#cluster-examples\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Examples</a></p></li>\n</ul>\n <p><a href=\"https://scikit-learn.org/stable/modules/decomposition.html#decompositions\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><strong>Dimensionality reduction</strong></a> Reducing the number of random variables to consider.</p>\n<ol>\n<li><p><strong>Applications</strong> :</p></li>\n</ol>\n<ul>\n<li><p>Visualization</p></li>\n<li><p>Increased efficiency</p></li>\n</ul>\n<ol start=\"2\">\n<li><p><strong>Algorithms</strong> :</p></li>\n</ol>\n<ul>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/decomposition.html#pca\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">PCA</a>, <a href=\"https://scikit-learn.org/stable/modules/feature_selection.html#feature-selection\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">feature selection</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/decomposition.html#nmf\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">non-negative matrix factorization</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/auto_examples/index.html#decomposition-examples\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Examples</a></p></li>\n</ul>\n <p><a href=\"https://scikit-learn.org/stable/model_selection.html#model-selection\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><strong>Model selection</strong></a> Comparing, validating and choosing parameters and models.</p>\n<ol>\n<li><p><strong>Goal</strong> : Improved accuracy via parameter tuning </p>\n</li>\n<li><p><strong>Modules</strong> :</p>\n</li>\n</ol>\n<ul>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/grid_search.html#grid-search\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">grid search</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">cross validation</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/model_evaluation.html#model-evaluation\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">metrics</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/auto_examples/index.html#general-examples\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Examples</a></p></li>\n</ul>\n <p><a href=\"https://scikit-learn.org/stable/modules/preprocessing.html#preprocessing\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><strong>Preprocessing</strong></a> Feature extraction and normalization.</p>\n <p><a href=\"https://scikit-learn.org/stable/modules/preprocessing.html#preprocessing\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><strong>Preprocessing</strong></a> Feature extraction and normalization. </p>\n<ol>\n<li><p><strong>Application</strong> : Transforming input data such as text for use with machine learning algorithms. </p></li>\n<li><p><strong>Modules</strong> :</p></li>\n</ol>\n<ul>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/preprocessing.html#preprocessing\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">preprocessing</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/modules/feature_extraction.html#feature-extraction\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">feature extraction</a></p></li>\n<li><p><a href=\"https://scikit-learn.org/stable/auto_examples/index.html#general-examples\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Examples</a></p></li>\n</ul>\n <h1>ML</h1>\n <p><strong>CLASSIFICATION AND REGRESSION PROBLEMS</strong></p>\n<p> There are numerous algorithms for predicting continuous variables or categorical variables from a set of continuous predictors and/or categorical factor effects. For example, in <a href=\"http://www.statsoft.com/textbook/statistics-glossary/g.aspx?button=g#general%20Linear%20Model\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><em>GLM (General Linear Models)</em></a> and <a href=\"http://www.statsoft.com/textbook/general-regression-models/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><em>GRM (General Regression Models)</em></a>, we can specify a linear combination (design) of continuous predictors and categorical factor effects (e.g., with two-way and three-way interaction effects) to predict a continuous dependent variable. In <em>GDA (General Discriminant Function Analysis)</em>, we can specify such designs for predicting categorical variables, i.e., to solve classification problems.</p>\n<p> <strong>Regression-type problems.</strong> Regression-type problems are generally those where we attempt to predict the values of a continuous variable from one or more continuous and/or <a href=\"http://www.statsoft.com/textbook/statistics-glossary/c.aspx?button=c#Categorical%20Predictor\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">categorical predictor variables</a>.</p>\n<p> <strong>Classification-type problems.</strong> Classification-type problems are generally those where we attempt to predict values of a categorical <a href=\"http://www.statsoft.com/textbook/statistics-glossary/i.aspx?button=i#Independent%20vs.%20Dependent%20Variables\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">dependent</a> variable (class, group membership, etc.) from one or more continuous and/or <a href=\"http://www.statsoft.com/textbook/statistics-glossary/c.aspx?button=c#Categorical%20Predictor\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">categorical predictor variables</a>.\n  There are a number of methods for analyzing classification-type problems and to compute predicted classifications, either from simple continuous predictors (e.g., binomial or multinomial logit regression in <a href=\"http://www.statsoft.com/textbook/statistics-glossary/g.aspx?button=g#generalized%20Linear%20Model\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><em>GLZ</em></a>), from categorical predictors (e.g., <a href=\"http://www.statsoft.com/textbook/statistics-glossary/l.aspx?button=l#Log-Linear%20Analysis\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><em>Log-Linear analysis</em></a> of multi-way frequency tables), or both (e.g., via ANCOVA-like designs in <em>GLZ</em> or <em>GDA</em>).</p>\n<p> <strong>Tree methods are nonparametric and nonlinear + Simplicity of results.\n  -Specify Criteria for Predictive Accuracy, Selecting Splits, When to Stop Splitting.</strong></p>\n<p> <strong>Data Classification</strong> -&amp;gt; Effectiveness <a href=\"https://en.wikipedia.org/wiki/Data_classification_(business_intelligence)\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Data_classification</a></p>\n <p><strong>Learning Models :</strong>\n  We can think of a model as a template. When data is processed through a learning model, what will come out the other end is insight.\n  The model is nothing more than a set of operations performed on the data.\n  Models are typically made in a static environment by (drilling/ rolling, pivoting, slicing/ dicing, Etc.) through data and may involve Integrating multiple mining functions (ex. Classifying than Clustering).</p>\n <p><a href=\"https://en.wikipedia.org/wiki/Data_classification_(business_intelligence)\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Data classification</a></p>\n<p> According to Golfarelli and Rizzi, these are the measures of effectiveness of the classifier:</p>\n<ul>\n<li><p>_ <strong>Predictive accuracy</strong> _ : How well does it predict the categories for new observations?</p></li>\n<li><p>_ <strong>Speed</strong> _ : What is the computational cost of using the classifier?</p></li>\n<li><p>_ <strong>Robustness</strong> _ : How well do the models created perform if <a href=\"https://en.wikipedia.org/wiki/Data_quality\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><strong>data quality</strong></a> is low?</p></li>\n<li><p>_ <strong>Scalability</strong> _ : Does the classifier function efficiently with large amounts of data?</p></li>\n<li><p>_ <strong>Interpretability</strong> _ : Are the results understandable to users?</p></li>\n</ul>\n <p><strong>Types of Models</strong></p>\n<p> Hierarchical Generative</p>\n<ul>\n<li><p>Gaussian Mixture Models</p></li>\n<li><p>Hidden Markov Models</p></li>\n<li><p>Naive Bayes</p></li>\n<li><p>GANS</p></li>\n</ul>\n<p> Discriminative</p>\n<ul>\n<li><p>NN</p></li>\n<li><p>SVM</p></li>\n<li><p>Logistic Regression</p></li>\n</ul>\n<p> Descriptive</p>\n<ul>\n<li><p>Derived from the Attributes of Data (mean, median, mode, avg)</p></li>\n</ul>\n <p><strong>MLE</strong> is the workhorse estimation technique of frequentist statistics\n <strong>latent variables</strong> :</p>\n<ul>\n<li><p>expectation maximization</p>\n</li>\n<li><p>methods of moments</p>\n</li>\n<li><p>signal separation</p>\n</li>\n</ul>\n<p> -- principal component analysis</p>\n<p> -- singular value decomposition</p>\n <p>properties of estimators (bias, consistency, efficiency, sufficiency, robustness).</p>\n<p> Testing: Type I and II errors, power, likelihood ratios</p>\n<p>  Methodology of probabilistic process models: </p>\n<ul>\n<li><p>Dirichlet</p></li>\n<li><p>Gaussian</p></li>\n<li><p>basis/kernel expansion</p></li>\n<li><p>splines, wavelets</p></li>\n<li><p>support vector machines </p></li>\n<li><p>other local regression models</p></li>\n</ul>\n <p><strong>latent variables</strong>:</p>\n<ul>\n<li><p>expectation maximization</p></li>\n<li><p>methods of moments</p></li>\n<li><p>signal separation</p></li>\n<li><p>principal component analysis</p></li>\n<li><p>singular value decomposition</p></li>\n</ul>\n <p><strong>Feature Reduction:</strong></p>\n<ul>\n<li><p>PCA - describe greatest features</p>\n</li>\n<li><p>Cross Correlation Analysis</p>\n</li>\n<li><p>Linear Discrimination, Combines Features</p>\n</li>\n</ul>\n <p><strong>concepts</strong>:</p>\n<p> accuracy (tp+tn/p+n)</p>\n<p> precision: tp/(tp+fp)</p>\n<p> specificity: tn/(fp+tn)</p>\n<p> sensitivity: tp/(tp+fn)</p>\n <p><strong>Regression</strong>:</p>\n<ul>\n<li><p>linear regressions - numeric</p>\n</li>\n<li><p>logistic regressions - categorical</p>\n</li>\n</ul>\n <p><strong>ensemble learning</strong> - bagging boosting stacking additive regression</p>\n <p><strong>Neural Nets</strong>: (super/unsuper)</p>\n<ul>\n<li><p>autoencoders</p>\n</li>\n<li><p>deep beliefe nets</p>\n</li>\n<li><p>hebbian learning</p>\n</li>\n<li><p>gans</p>\n</li>\n<li><p>implicit density model</p>\n</li>\n<li><p>som</p>\n</li>\n</ul>\n <p><strong>Clustering</strong>:</p>\n<ul>\n<li><p>Hierarchal</p>\n</li>\n<li><p>Kmeans (Euclidean, Mikowski, Manhattan, #Clusters) </p>\n</li>\n<li><p>super/unsuper - sort by centroid</p>\n</li>\n<li><p>anomoly-detection - outliers, super/unsuper</p>\n</li>\n</ul>\n <p><strong>RNN</strong> </p>\n<ul>\n<li><p>LSTM</p></li>\n<li><p>Hierarchal</p></li>\n<li><p>Stochastic</p></li>\n</ul>\n <p><strong>FeedForward</strong> :</p>\n<ul>\n<li><p>MIP</p></li>\n<li><p>Autoencoder</p></li>\n<li><p>Probablistic</p></li>\n<li><p>Convolusional</p></li>\n<li><p>Time Delay</p></li>\n</ul>\n <p><strong>Online Learning</strong> :</p>\n<ul>\n<li><p>Data Efficient and Adaptable</p></li>\n<li><p>No Data storage needed</p></li>\n<li><p>Stochastic Gradient Descent</p></li>\n<li><p>No data storage needed</p></li>\n</ul>\n <p><strong>T-Distribution</strong> - Visualize high density</p>\n <p> <strong>RISK</strong> :Redundancy in the data. If the input features contain redundant information (e.g., highly correlated features), some learning algorithms (e.g.,<a href=\"https://en.wikipedia.org/wiki/Linear_regression\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">linear regression</a>,<a href=\"https://en.wikipedia.org/wiki/Logistic_regression\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">logistic regression</a>, and<a href=\"https://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">distance based methods</a>) will perform poorly because of numerical instabilities. These problems can often be solved by imposing some form of<a href=\"https://en.wikipedia.org/wiki/Regularization_(mathematics)\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">regularization</a>.\n  Presence of interactions and non-linearities. If each of the features makes an independent contribution to the output, then algorithms based on linear functions (e.g.,<a href=\"https://en.wikipedia.org/wiki/Linear_regression\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">linear regression</a>,<a href=\"https://en.wikipedia.org/wiki/Logistic_regression\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">logistic regression</a>,<a href=\"https://en.wikipedia.org/wiki/Support_Vector_Machines\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Support Vector Machines</a>,<a href=\"https://en.wikipedia.org/wiki/Naive_Bayes_classifier\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">naive Bayes</a>) and distance functions (e.g.,<a href=\"https://en.wikipedia.org/wiki/K-nearest_neighbor_algorithm\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">nearest neighbor methods</a>,<a href=\"https://en.wikipedia.org/wiki/Support_Vector_Machines\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">support vector machines with Gaussian kernels</a>) generally perform well. However, if there are complex interactions among features, then algorithms such as<a href=\"https://en.wikipedia.org/wiki/Decision_tree_learning\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">decision trees</a> and<a href=\"https://en.wikipedia.org/wiki/Artificial_neural_network\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">neural networks</a> work better, because they are specifically designed to discover these interactions. Linear methods can also be applied, but the engineer must manually specify the interactions when using them.</p>\n<p> <strong>concepts</strong> :</p>\n<p> accuracy (tp+tn/p+n)</p>\n<p> precision: tp/(tp+fp)</p>\n<p> specificity: tn/(fp+tn)</p>\n<p> sensitivity: tp/(tp+fn)\n <strong>properties of estimators</strong> (bias, consistency, efficiency, sufficiency, robustness).</p>\n<p> <strong>Testing</strong> : Type I and II errors, power, likelihood ratios</p>\n<p> <strong>Critical Review</strong>\n  Configuration and Risk\n  Rational for Complexity\n  Weighted parameters\n  Weighted performance metrics\n  Risk assessments and mitigations\n  Technologies\n  Roadmaps</p>\n <p>Common Error Measures:</p>\n<ul>\n<li><p>(root) Mean Squared Error - continuous data, sensitivity to outliers</p></li>\n<li><p>median absolute deviation - continuous data, often more robust</p></li>\n<li><p>sensitivity (Recall) - if you want few missed positives</p></li>\n<li><p>specificity - if you want few negatives called positives</p></li>\n<li><p>accuracy - weights false positives / negatives equally</p></li>\n<li><p>Concordance - one example is kappa</p></li>\n</ul>\n<p>  Key issues: accuracy, overfitting, interpretability, computational speed.\n  Pay attention to - confounding variables, complicated interactions, skewness, outliers, nonlinear patterns, variance changes, units/scale issues, overloading, regression, correlation and causation\n  Confounder: a variable that is correlated with both the outcome and covariates</p>\n<ul>\n<li><p>confounders can change the regression line.</p></li>\n<li><p>detected with exploration</p></li>\n</ul>\n<p> <strong>Hierarchical</strong> - Distance or similarity? - continuous(euclidean/correlation), binary - manhattan\n <strong>Graphs</strong> - help understand properties, find patterns, suggest future modelings, debug, and communicate.\n <strong>Bagging and Boosting</strong> - Combine classifiers to improve accuracy but make harder to interpret. Predictive</p>\n"}