{"meta":{"filename":"javascript"},"content":"<p>-&gt;&gt;&gt;&gt; function fn(){ console.log(arguements } -&gt;&gt;&gt;&gt; this refers to global scope with arrow functions</p>\n<ul>\n<li><div>destructure within desctructure - {today:{min:x,max:y}} &lt; ----- &gt; const {tomorrow:{max:newvalue}} = z</div></li>\n</ul>\n <p> element.insertAdjacentHTML(&#39;afterend&#39;, &#39;txt&#39;)</p>\n <h2 id=\"modules\">Modules</h2>\n <ul>\n<li><div>Top level await only works in modules.</div></li>\n<li><div>Module are imported into the scope of the calling single script </div></li>\n<li><div>Modules and aren&#39;t available in the global scope unless explicitly attached On the other hand, globally-defined variables are available within the module.</div></li>\n<li><div>Import Maps only work in modules.</div></li>\n</ul>\n <p>Dynamic imports will load a global even if it does not have a default or named export but static imports will not</p>\n <script>\n   // A var statement creates a global variable.\n   var text = \"Hello\";\n </script>\n <script type=\"module\" src=\"./render.js\"></script>\n \n JS transitions require JS which we don't necessarily want to depend on!"}