{"meta":{"title":"API's and loading data","summary":"Today we will be pulling down content using python and an Application Programming Interface API ","prettify":"true","filename":"04_apis"},"content":"<div class=\"unset\">\n   <style>\n   .unset{padding:0px;}\n   .unset p a img {\n     width: auto;\n   }\n   .unset p{ margin:10px;}\n   </style> <p><a href=\"https://mybinder.org/v2/gh/bnia/dataguide/main?filepath=%2Fnotebooks%2F04_APIs.ipynb\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://mybinder.org/badge_logo.svg\" alt=\"Binder\"></a>\n <a href=\"https://colab.research.google.com/github/bnia/dataguide/blob/main/notebooks/04_APIs.ipynb\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://pete88b.github.io/fastpages/assets/badges/colab.svg\" alt=\"Binder\"></a>\n <a href=\"https://github.com/bnia/dataguide/tree/main/notebooks/04_APIs.ipynb\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://pete88b.github.io/fastpages/assets/badges/github.svg\" alt=\"Binder\"></a>\n <a href=\"https://github.com/ellerbrock/open-source-badges/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://badges.frapsoft.com/os/v3/open-source.svg?v=103\" alt=\"Open Source Love svg3\"></a></p>\n<p> <a href=\"https://github.com/bnia/dataguide/blob/main/LICENSE\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/npm/l/all-contributors.svg?style=flat\" alt=\"NPM License\"></a>\n <a href=\"https://bnia.github.io\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"http://img.shields.io/badge/Status-Active-green.svg\" alt=\"Active\"></a> \n <a href=\"\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/last-commit/bnia/dataguide.svg?style=flat\" alt=\"GitHub last commit\"></a>  </p>\n<p> <a href=\"https://github.com/bnia/dataguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/stars/bnia/dataguide.svg?style=social&label=Star\" alt=\"GitHub stars\"></a> \n <a href=\"https://github.com/bnia/dataguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/watchers/bnia/dataguide.svg?style=social&label=Watch\" alt=\"GitHub watchers\"></a> \n <a href=\"https://github.com/bnia/dataguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/forks/bnia/dataguide.svg?style=social&label=Fork\" alt=\"GitHub forks\"></a> \n <a href=\"https://github.com/bnia/dataguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/github/followers/bnia.svg?style=social&label=Follow\" alt=\"GitHub followers\"></a> </p>\n<p> <a href=\"https://twitter.com/intent/tweet?text=Check%20out%20this%20%E2%9C%A8%20colab%20by%20@bniajfi%20https://github.com/bnia/dataguide%20%F0%9F%A4%97\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/twitter/url/https/github.com/bnia/dataguide.svg?style=social\" alt=\"Tweet\"></a> \n <a href=\"https://twitter.com/bniajfi\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"><img src=\"https://img.shields.io/twitter/follow/bniajfi.svg?style=social\" alt=\"Twitter Follow\"></a></p>\n </div> <details>\n <summary> <h2 id=\"csv\">CSV</h2>\n </summary> <p>You don&#39;t need an API to pull remote data! </p>\n<p> You can publish you data in a Google <a href=\"https://medium.com/analytics-vidhya/colab-and-google-sheets-surprisingly-powerful-combination-for-data-science-part-1-bbbb11cbd8e\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Sheets</a> and pull it via url in your code. </p>\n<p> Likewise, github hosted files are accessible in a similar manner. </p>\n  <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>category</th>\n      <th>description</th>\n      <th>shortname</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>CD</td>\n      <td>Total Population</td>\n      <td>Tpop</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>CD</td>\n      <td>Total Male Population</td>\n      <td>Male</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>CD</td>\n      <td>Total Female Population</td>\n      <td>Female</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>CD</td>\n      <td>Percent of Residents - Black/African-American ...</td>\n      <td>Paa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>CD</td>\n      <td>Percent of Residents - White/Caucasian (Non-Hi...</td>\n      <td>Pwhite</td>\n    </tr>\n  </tbody>\n</table>\n</div> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>TRACTCE10</th>\n      <th>GEOID10</th>\n      <th>CSA2010</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>10100</td>\n      <td>24510010100</td>\n      <td>Canton</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10200</td>\n      <td>24510010200</td>\n      <td>Patterson Park North &amp; East</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>10300</td>\n      <td>24510010300</td>\n      <td>Canton</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>10400</td>\n      <td>24510010400</td>\n      <td>Canton</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>10500</td>\n      <td>24510010500</td>\n      <td>Fells Point</td>\n    </tr>\n  </tbody>\n</table>\n</div> </details>\n <details>\n <summary> <h2 id=\"json\">JSON</h2>\n </summary> <details>\n <summary> <h3 id=\"simple-json\">Simple JSON</h3>\n </summary> <p>Note how raw text can be loaded</p>\n <p>And the JSON structure may vary. </p>\n<p> Here the Json txt takes the form of an array of objects, commonly refered to as an &#39;object array&#39;.</p>\n<p> Notice the difference?</p>\n  <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>col1</th>\n      <th>col2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>row1</th>\n      <td>1</td>\n      <td>x</td>\n    </tr>\n    <tr>\n      <th>row2</th>\n      <td>2</td>\n      <td>y</td>\n    </tr>\n    <tr>\n      <th>row3</th>\n      <td>3</td>\n      <td>z</td>\n    </tr>\n  </tbody>\n</table>\n</div> <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>col1</th>\n      <th>col2</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>x</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>y</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>z</td>\n    </tr>\n  </tbody>\n</table>\n</div> </details>\n <details>\n <summary> <h3 id=\"json-by-url-first-api-example\">Json by URL (First API Example)</h3>\n </summary> <p>Heres a Really Simple Example API</p>\n  <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>provider</th>\n      <th>WARNING_UPGRADE_TO_V6</th>\n      <th>terms</th>\n      <th>base</th>\n      <th>date</th>\n      <th>time_last_updated</th>\n      <th>rates</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>AED</th>\n      <td>https://www.exchangerate-api.com</td>\n      <td>https://www.exchangerate-api.com/docs/free</td>\n      <td>https://www.exchangerate-api.com/terms</td>\n      <td>ALL</td>\n      <td>2021-06-29</td>\n      <td>1624924802</td>\n      <td>0.0357</td>\n    </tr>\n    <tr>\n      <th>AFN</th>\n      <td>https://www.exchangerate-api.com</td>\n      <td>https://www.exchangerate-api.com/docs/free</td>\n      <td>https://www.exchangerate-api.com/terms</td>\n      <td>ALL</td>\n      <td>2021-06-29</td>\n      <td>1624924802</td>\n      <td>0.7700</td>\n    </tr>\n    <tr>\n      <th>ALL</th>\n      <td>https://www.exchangerate-api.com</td>\n      <td>https://www.exchangerate-api.com/docs/free</td>\n      <td>https://www.exchangerate-api.com/terms</td>\n      <td>ALL</td>\n      <td>2021-06-29</td>\n      <td>1624924802</td>\n      <td>1.0000</td>\n    </tr>\n  </tbody>\n</table>\n</div> <p>This is the census&#39; ones</p>\n <p>You can get a full list of tableId&#39;s from downloads <a href=\"https://www.census.gov/programs-surveys/acs/technical-documentation/table-shells.html\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">here</a>. </p>\n<p> or explore the available ones by not submitting a tableID in the query</p>\n  https://api.census.gov/data/2019/acs/acs5/groups/.json\n <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>groups</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>{'name': 'B17015', 'description': 'POVERTY STA...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>{'name': 'B18104', 'description': 'SEX BY AGE ...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>{'name': 'B17016', 'description': 'POVERTY STA...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>{'name': 'B18105', 'description': 'SEX BY AGE ...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>{'name': 'B17017', 'description': 'POVERTY STA...</td>\n    </tr>\n  </tbody>\n</table>\n</div> <p>Notice how the response varys when we actually give it a valule. </p>\n<p> In this case we are given back meta data on table columns. </p>\n<p> The response to any query is given in the acs documentation</p>\n  https://api.census.gov/data/2019/acs/acs5/groups/B17015.json\n <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>variables</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>B17015_001E</th>\n      <td>{'label': 'Estimate!!Total:', 'concept': 'POVE...</td>\n    </tr>\n    <tr>\n      <th>B17015_001EA</th>\n      <td>{'label': 'Annotation of Estimate!!Total:', 'c...</td>\n    </tr>\n    <tr>\n      <th>B17015_001M</th>\n      <td>{'label': 'Margin of Error!!Total:', 'concept'...</td>\n    </tr>\n    <tr>\n      <th>B17015_001MA</th>\n      <td>{'label': 'Annotation of Margin of Error!!Tota...</td>\n    </tr>\n    <tr>\n      <th>B17015_002E</th>\n      <td>{'label': 'Estimate!!Total:!!Income in the pas...</td>\n    </tr>\n  </tbody>\n</table>\n</div>  </details>\n <details>\n <summary> <h3 id=\"json-by-file\">Json by File</h3>\n </summary> <p>Sometimes Json doesn&#39;t come in the form you want. </p>\n<p> In times like those, you can download the data directly to a file using the wget terminal command</p>\n <p>This is the json - machine readable - file provided by the Census bureau.</p>\n<p> It has the data we want stored as an attribute within a larger &#39;object&#39;. </p>\n<p> Here is one way to read in the json, access the attribute, and then load it up for use.</p>\n <pre class='prettyprint'>! wget https://api.census.gov/data.json</pre>   <p>From there, you&#39;d do whatever operations you need on it (either manuall or with code). </p>\n<p> And then it can be loaded up as a dataset</p>\n    </details></details>\n <details>\n <summary> <h2 id=\"esri-second-api-example\">Esri (Second API Example)</h2>\n </summary> <p>BNIA uses ARCGIS/ ESRI to store its data for programmatic retrieval in a bunch of our applicatons.</p>\n <p>For certain API services, tools can be provided to help you build and model your query.</p>\n <p>Here is <a href=\"https://services1.arcgis.com/mVFRs7NF4iFitgbY/ArcGIS/rest/services/GP_Boundaries/FeatureServer/0/query\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">ESRIs</a></p>\n <p>To read in the Geospatial information provided by Esri requires the use of a speical library</p>\n   <pre class='prettyprint'>https://services1.arcgis.com/mVFRs7NF4iFitgbY/ArcGIS/rest/services/{shortnametable.row['shortnamecolumn']}/FeatureServer/0/query?where=1=1&returnCountOnly=true&f=pjson</pre>  <div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>OBJECTID</th>\n      <th>Name</th>\n      <th>Shape__Area</th>\n      <th>Shape__Length</th>\n      <th>geometry</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>Abell</td>\n      <td>1.890312e+05</td>\n      <td>1796.137499</td>\n      <td>POLYGON ((-76.61113 39.32345, -76.61167 39.323...</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>2</td>\n      <td>Allendale</td>\n      <td>1.052283e+06</td>\n      <td>4351.591130</td>\n      <td>POLYGON ((-76.67263 39.29184, -76.67263 39.291...</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>3</td>\n      <td>Arcadia</td>\n      <td>5.854937e+05</td>\n      <td>3739.317928</td>\n      <td>POLYGON ((-76.56853 39.33595, -76.56814 39.335...</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>Arlington</td>\n      <td>4.677565e+05</td>\n      <td>2973.669980</td>\n      <td>POLYGON ((-76.68627 39.34791, -76.68646 39.348...</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5</td>\n      <td>Armistead Gardens</td>\n      <td>1.224526e+06</td>\n      <td>5155.929124</td>\n      <td>POLYGON ((-76.55880 39.30646, -76.55892 39.306...</td>\n    </tr>\n  </tbody>\n</table>\n</div> </details>\n  <script src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdn.rawgit.com/google/code-prettify/master/styles/desert.css\"/>\n  "}