{"meta":{"title":"About ESP32","summary":"A brief description of what the esp has to offer.","keywords":"['esp32', 'navigation']","prettify":"true","filename":"esp_notes"},"content":"<img src='/images/covers/esp_notes1.webp'> <h2 id=\"background\">Background</h2>\n <p>ARM vs Risc</p>\n<ul>\n<li><p>arm = advanced risc machine. - David Braben and ian bell created ARM which was built on RISC.</p></li>\n<li><p>risc = reduced instruction set computing - David Patterson created the original RISC processor</p></li>\n</ul>\n<p> History 1978</p>\n<ul>\n<li><p>Riscv1= 80, Riscv2= 83(16bit), riscv3=84(32bit), riscv4=88</p></li>\n<li><p>ARMv1 = 85, 32bit, 1watt chip</p></li>\n<li><p>ARMv2 = 87</p></li>\n<li><p>ARMv3 = appl partnership</p></li>\n<li><p>ARM4=current</p></li>\n<li><p>risc5=start2010, open source, OISA not OSH, 32,64</p></li>\n</ul>\n<p> Mems vs Asic</p>\n<ul>\n<li><p>MEMS - Micro-electromechanical systems and </p></li>\n<li><p>ASIC - Application-specific integrated circuit respectively.</p></li>\n</ul>\n<p> ARM Cortex A vs ARM Cortex M</p>\n<ul>\n<li><p>A(asic) - (for phontes-laptops) &quot;32bits is dead as of 2023&quot;</p></li>\n<li><p>M(mems) - microcontrollers, offers 32bits - 12k gate processors in size</p></li>\n</ul>\n <h2 id=\"misc\">Misc</h2>\n <p>esp32 takes 3.3v. and uses an ams1117 to step down the 5v usb input used to first power the uart\n <a href=\"http://www.advanced-monolithic.com/pdf/ds1117.pdf\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">http://www.advanced-monolithic.com/pdf/ds1117.pdf</a>\n <a href=\"https://www.mouser.com/c/semiconductors/power-management-ics/voltage-regulators-voltage-controllers/linear-voltage-regulators/?q=7805&package%20%2F%20case=TO-220\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.mouser.com/c/semiconductors/power-management-ics/voltage-regulators-voltage-controllers/linear-voltage-regulators/?q=7805&amp;package%20%2F%20case=TO-220</a></p>\n <p>25 microns .025mm\n razor blade = 100 microns or .1mm\n 1 micron =~ 1k atoms</p>\n <p><a href=\"https://www.google.com/search?q=INMP441&oq=INMP441&aqs=chrome..69i57.880j0j7&client=ms-android-samsung-rvo1&sourceid=chrome-mobile&ie=UTF-8#scso=_QdQQZMmTLIuq5NoP2YOImAs_27:0%5Cn\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.google.com/search?q=INMP441&amp;oq=INMP441&amp;aqs=chrome..69i57.880j0j7&amp;client=ms-android-samsung-rvo1&amp;sourceid=chrome-mobile&amp;ie=UTF-8#scso=_QdQQZMmTLIuq5NoP2YOImAs_27:0\\n</a></p>\n <p>c=discharge rate</p>\n<ul>\n<li><ul>\n<li><p>connecting in serial increases voltage</p></li>\n</ul>\n</li>\n</ul>\n <h2 id=\"esp-specific\">ESP Specific</h2>\n <p><a href=\"https://hackaday.com/2023/07/28/the-esp32-doesnt-need-much/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://hackaday.com/2023/07/28/the-esp32-doesnt-need-much/</a></p>\n<p> <a href=\"https://www.youtube.com/watch?app=desktop&v=tQ0dL_9M1wI\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.youtube.com/watch?app=desktop&amp;v=tQ0dL_9M1wI</a></p>\n <p><a href=\"http://192.168.4.1/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">http://192.168.4.1/</a>\n <a href=\"https://www.youtube.com/watch?v=BP1Dz66faf4\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.youtube.com/watch?v=BP1Dz66faf4</a>\n ESP32_NAT_Router</p>\n <p><a href=\"https://github.com/cnlohr/esp32-c3-playground\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/cnlohr/esp32-c3-playground</a>\n <a href=\"https://github.com/cnlohr/esp32s2-cookbook/tree/master\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/cnlohr/esp32s2-cookbook/tree/master</a></p>\n<p> compiled arduion code:  go to File -&gt; Preferences and then select Show verbose output during -&gt; compilation. Finally, when you are compiling, the program will show you lots of data. At the last lines, you will find the path1 to the . hex file</p>\n <h2 id=\"\"></h2>\n <h2 id=\"non-lightaudiomodule-hardware\">Non-Light/Audio/Module Hardware</h2>\n <p>802.11 broadcast packets don&#39;t need wifi connection to be recieved so long as the reciever is on the channel</p>\n <p>just the chip designs need to be fcc certified but the modules are ok</p>\n <p>jst connectors are out. not enough current run through em</p>\n <p>pcb screw terminals run a lot of resistance compared to butt connectors, bogo or soldering</p>\n<p> pcv screw terminals produce a .22w power loss at 10Amps</p>\n<p> r = 2.2milliohms. pl=2.2r*10a=.22w</p>\n <h2 id=\"powering-leds\">Powering LEDS</h2>\n <p>100w LED strip which runs at 24v and needs 5 meters of cable this requires 4Amps of power. which require a wire of 0.75mm2 to transfer it over those 5 meters. If you however double feed the cable (from both ends) the requirement per cable is only ~2A so thinner cables can be used!</p>\n<p> *Power distribution is never 100% equal and itâ€™s good practice making sure both ends can handle the full load, maybe use 2/3rd of the thickness instead of half for instance</p>\n<p> 150leds or less use 2.0\n under 300 go w 10amps dc barrel jacks\n 300 + go w AC DC converter</p>\n <p>18 AWGauge,  0.75 mm^2, 3 core copper wire</p>\n <p>Specification:Connectors:rated voltage: 0-36V;rated current: 0-5A. Extension wire: rated voltage:0-300V;rated current:0-2A</p>\n <p>logic level shift 3.3 2 5v to ensure data signal doesnt get corrupted over long distances.</p>\n <p>50a @ .05A each 5v LED or .03A 4 12V&#39;s</p>\n<p> If I need the 60 per. thatd be 40amps needed.</p>\n <p>Drive 1000LEDS w: </p>\n<ul>\n<li><p>5v 50A == 250watts or </p></li>\n<li><p>12v 29A = 350watts power supplys</p></li>\n</ul>\n <p>5v inject ever 5m\n 12v inject every 10m\n homerun injection - power supply runs wire to each injection point.\n parallel run - homerun till split and run inside multiple aluminum channels.\n inject using 22gague solid core and apply at begining and end of each strip\n 14gauge from 5v 40amp supply</p>\n <p>connecting power injection lines from alternate power adapter from original will cause grounding problems.</p>\n <p>power supplys should never connect</p>\n <p>5v AC to DC Power Adapter Converter/ Transformer </p>\n <p>BTF-LIGHTING DC5V Power Adapter \n 5V10A 50W- $22.99\n 5V3A 15W - $9.99\n 5V6A 30W - $15.99\n 5V8A 40W - $17.99</p>\n <h2 id=\"factsheet\">Factsheet</h2>\n <p>small, 2A 480Mbps\n small, 2.0 3A 480Mbps\n small 2A 480Mbps - not good for magsafe unless 15W input</p>\n<p> gen2. @ 1000Mbps (10Gbps) (supports 4k), is 2x 3.0 &amp; 20x 2.0 (novideo), </p>\n<p> long, usba-usbc -&gt; 3.0 gen2, 100W Fast Charging, not magsafe nor macbook\n long, usba-usbc -&gt; 3.0 3-&gt;2.4A 500Mbps, \n long, usbc-usba -&gt; 3.0 3A 500Mbps</p>\n <p>Specification:Connectors:rated voltage: 0-36V;rated current: 0-5A. Extension wire: rated voltage:0-300V;rated current:0-2A</p>\n <p>30x5 -&gt; 150 = 3A/9a</p>\n <h2 id=\"diffusers\">Diffusers</h2>\n <p>leds should be further away from the diffuser than eachtoher to avoid brightspots. </p>\n <p>average diffuser heights: \n 6.5 - 22% drop \n 13.5\n 16 - 36% less bright then no diffuser. spotless = 56% reduction</p>\n <p>model U4 is best! </p>\n <p><a href=\"https://www.btf-lighting.com/products/sk6812rgbw-led-neon-rope-tube-ws2811-ws2812b-ws2813-flexible-gel-soft-tube-1m-5m-ip67-waterproof?variant=42978175484130\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.btf-lighting.com/products/sk6812rgbw-led-neon-rope-tube-ws2811-ws2812b-ws2813-flexible-gel-soft-tube-1m-5m-ip67-waterproof?variant=42978175484130</a></p>\n<p> 1018 - 15 - 46\n 1220 - 19 - 58\n 1220-3 - 18 - 56\n 1023 - 19 - 59\n 1616 - 16 - 55\n 1616s - 13-60</p>\n<p> [1018 (1220s-3)] 1023 1616s 2020s\n <a href=\"https://ae01.alicdn.com/kf/Hf32caccc1db14c26a816422e69d9a71bz.jpg\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://ae01.alicdn.com/kf/Hf32caccc1db14c26a816422e69d9a71bz.jpg</a>\n <a href=\"https://ae01.alicdn.com/kf/H821463ec18f54850b847715c9b71a2a9j.png\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://ae01.alicdn.com/kf/H821463ec18f54850b847715c9b71a2a9j.png</a></p>\n <p>At full brighness(60mA) (20perRgb), \n 30Leds/Meter from a 5V uses 1.8 Amps.\n 5meters is the longest you can buy which would be 9Amps</p>\n <h2 id=\"light\">Light</h2>\n <p>27.87   -&gt; BTF-LIGHTING 2 Pack WS2812B ECO RGB Alloy Wires 5050SMD Individual Addressable 8X32 256 Pixel LED Matrix. 37.99 for 2 </p>\n <ul>\n<li><p>ip65- water repelent - rated for splash and rainproof. </p></li>\n<li><p>ip67 - sealed silicon sleaves. wont work in thin channels</p></li>\n<li><p>sk6812 is rgbw, ws2812b</p></li>\n<li><p>30 leds per meter w spottless diffuser and black deep channel</p></li>\n</ul>\n <p>5V power supply @ 20mah/60mah per pixel draw:</p>\n<ul>\n<li><p>2.1a - 10w = 100/35 LEDs - (USB2.0)</p></li>\n<li><p>5a - 25w - 250/83, </p></li>\n<li><p>8a - 40w - 400/134</p></li>\n<li><p>10 - 50w - 500/167</p></li>\n<li><p>15a - 75w - 750/250</p></li>\n<li><p>20a - 100w - 1000/334</p></li>\n<li><p>30a - 150w - 1500/500</p></li>\n<li><p>40a - 200w - 2000/750</p></li>\n<li><p>50a - 250w - 2500/834</p></li>\n<li><p>60a - 300w - 3000/1000</p></li>\n</ul>\n <p>30x5m -&gt; 150leds = 3A/9a</p>\n <p>LED strip width: </p>\n<ul>\n<li><p>IP30 IP65 :10mm</p></li>\n<li><p>IP67:12mm( include silicone sheathing)</p></li>\n</ul>\n <p>30Leds/m = 32.9mm\n 60/m = 16.2\n 144/m= 6.6</p>\n <p>1000? 750? 5-600 leds per nodemcu. all work but fps probs drop</p>\n <h2 id=\"audio\">Audio</h2>\n <p>background noise filtering (or squelch)\n Tge ESP32 uses a 12 bit ADC</p>\n <ul>\n<li><p><a href=\"https://learn.sparkfun.com/tutorials/sound-detector-hookup-guide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://learn.sparkfun.com/tutorials/sound-detector-hookup-guide</a></p></li>\n<li><p><a href=\"https://learn.sparkfun.com/tutorials/electret-mic-breakout-board-hookup-guide/all\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://learn.sparkfun.com/tutorials/electret-mic-breakout-board-hookup-guide/all</a></p></li>\n<li><p><a href=\"https://www.instructables.com/Electret-microphone/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.instructables.com/Electret-microphone/</a></p></li>\n<li><p><a href=\"https://learn.sparkfun.com/tutorials/mems-microphone-hookup-guide/all\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://learn.sparkfun.com/tutorials/mems-microphone-hookup-guide/all</a></p></li>\n<li><p><a href=\"https://forum.arduino.cc/t/drums-trigger-led-with-a-mic/948511/12\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://forum.arduino.cc/t/drums-trigger-led-with-a-mic/948511/12</a></p></li>\n</ul>\n <p>INMP441</p>\n <ul>\n<li><p>Leave the MAX4466 gain untouched. It works fine out of the box.</p></li>\n</ul>\n<p> A MAX4466 and INMP401 should average about 1875 on an ESP32, a MAX9814 about 1350 for all gain settings.</p>\n <p><a href=\"https://github.com/atuline/WLED/wiki/Analog-Audio-Input-Options\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Options</a></p>\n<ul>\n<li><p>Adafruit - $6.95 - Electret Microphone Amp - <a href=\"https://www.adafruit.com/product/1063\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">MAX4466</a> with Adjustable Gain</p></li>\n<li><p>Digikey - $7.95 - Electret Microphone Amp Audio Evaluation Board - <a href=\"https://www.digikey.com/en/products/detail/adafruit-industries-llc/1713/4990777?s=N4IgjCBcoLQBxVAYygMwIYBsDOBTANCAPZQDa4ArAEwIC6AvvYVWeAOxgDMIDQA\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">MAX9814</a></p></li>\n<li><p>SparkFun - $6.95 - MEMS Microphone Breakout - <a href=\"https://www.sparkfun.com/products/18011\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">ICS-40180</a></p></li>\n<li><p>AliExpress - $1.61 - I2S MEMS Microphone - <a href=\"https://www.aliexpress.com/i/2251832776111658.html?gatewayAdapt=4itemAdapt\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\"> INMP441</a></p></li>\n</ul>\n <h4 id=\"analog-or-i2s-digital\">Analog or I2S Digital?</h4>\n<ul>\n<li><p>We recommend using an I2S digital microphone with ESP32 boards - like INMP441, ICS-43434, or PDM microphones.</p></li>\n<li><p>Analog input (Microphone or Line-in) is also possible, however you might have power fluctuation (3.3V) and noise issues when using these. <strong>Analog devices are handled by the &quot;ADC1&quot; unit of your ESP32. Problems can be expected when connecting &quot;analog buttons&quot; (Potentiometer) to the same ADC1 unit.</strong></p></li>\n<li><p>Finally <strong>Analog Microphones often work best when placed very close to the sound source, while digital ones like the INMP441 can easily pick up sound from several meters apart</strong>. With the analog MAX4466, we found that 30-50cm is an optimal distance.</p></li>\n</ul>\n<p> While providing a lot of functionality, the ESP8266 and the ESP32 boards (typical ones) we have been using, have experienced a lot of spurious noise on their ADC pins</p>\n<ul>\n<li><p>On ESP32, use an I2S microphone, such as the INMP441, SPH0645 or ICS-43434.</p></li>\n<li><p>Isolate the power between the LED strips and the controller.</p></li>\n<li><p>Don&#39;t power your LED stripe from the ESP32 3.3v or 5v pins.</p></li>\n<li><p>Don&#39;t use USB power from your PC.</p></li>\n<li><p>Some batches of analog microphones are just no good.</p></li>\n</ul>\n <h2 id=\"other-projects\">Other Projects</h2>\n <ul>\n<li><p><a href=\"https://github.com/AEFeinstein/Super-2023-Swadge-HW\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/AEFeinstein/Super-2023-Swadge-HW</a></p></li>\n<li><p><a href=\"https://github.com/AEFeinstein/Super-2023-Swadge-FW\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/AEFeinstein/Super-2023-Swadge-FW</a></p></li>\n<li><p><a href=\"https://github.com/cnlohr/Super-2021-Swadge-FW-Sandbox\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/cnlohr/Super-2021-Swadge-FW-Sandbox</a></p></li>\n<li><p><a href=\"https://github.com/cnlohr/Super-2021-Swadge-HW\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/cnlohr/Super-2021-Swadge-HW</a></p></li>\n<li><p><a href=\"https://github.com/cnlohr/swadgeguide\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/cnlohr/swadgeguide</a> - 2020</p></li>\n<li><p><a href=\"https://github.com/AEFeinstein/Super-2020-Swadge-HW\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/AEFeinstein/Super-2020-Swadge-HW</a></p></li>\n<li><p><a href=\"https://github.com/cnlohr/swadge2019\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/cnlohr/swadge2019</a></p></li>\n<li><p><a href=\"https://github.com/cnlohr/swadges2017\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/cnlohr/swadges2017</a></p></li>\n</ul>\n <p>guy on lighting board changing lights sends data to arduino via DMX shield. Arduino was INITIALLY connected to a laptop which would send data over wifi to main server which would send updates out via unicast to each of the badges in the concert hall. The central server would log every espthat connects to it for broadcasting.  The Server ran in a container enviornment (a prox box stack). This was later changed LIVE during the event because w 1.3k esp&#39;s the channel utilization for the wifi 2.4ghz band range shot up to 86% (dropped packets b/c of all the back and forth comms) before switching to send out raw 802.11 packets (espnow esque) via ESP&#39;s. 3 esps on 3 different broadcast channels would do the unicasting after being directly connected to the arduino (Cutting out the laptop and central broadcast server).  The dmx broadcasts an array of data corresponding to a lighting command. 20x/s. Can be an array of array [of lighting commands] -&gt; the mac address would get modulod by 3 to sort which esp would be the broadcaster</p>\n<p> 2 batteries lasted 20 hours so they used sleep to keep it going for weeks (.3ma). every 30 seconds would wake up and look for the network. admin badges existsed. no ota</p>\n <ul>\n<li><p><a href=\"https://www.youtube.com/watch?v=S_p0YV-JlfU\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.youtube.com/watch?v=S_p0YV-JlfU</a></p></li>\n<li><p><a href=\"https://easyeda.com/editor#id=fbcc60cfb0d247e59f691554a623c02f%7Ce093c929dbea4fbebbdd9a1d95c63ab3%7C3beaebc196b2425db179dfd6e55c2b23\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://easyeda.com/editor#id=fbcc60cfb0d247e59f691554a623c02f|e093c929dbea4fbebbdd9a1d95c63ab3|3beaebc196b2425db179dfd6e55c2b23</a></p></li>\n</ul>\n\n  <script src=\"https://cdn.jsdelivr.net/gh/google/code-prettify@master/loader/run_prettify.js\"></script>\n  <link rel=\"stylesheet\" href=\"https://cdn.rawgit.com/google/code-prettify/master/styles/desert.css\"/>\n  "}