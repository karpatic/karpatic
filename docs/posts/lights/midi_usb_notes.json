{"meta":{"filename":"midi_usb_notes"},"content":"<h1>JS Tutorials</h1>\n<ul>\n<li><p><a href=\"https://developers.google.com/web/fundamentals/native-hardware/build-for-webusb\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://developers.google.com/web/fundamentals/native-hardware/build-for-webusb</a></p></li>\n</ul>\n <h1>Library - Processor Compatability</h1>\n<ul>\n<li><p><a href=\"https://github.com/webusb/arduino\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/webusb/arduino</a> </p></li>\n<li><p><a href=\"https://learn.adafruit.com/using-webusb-with-arduino-and-tinyusb/library-board-and-tinyusb-selection\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://learn.adafruit.com/using-webusb-with-arduino-and-tinyusb/library-board-and-tinyusb-selection</a></p></li>\n<li><p><a href=\"https://learn.adafruit.com/using-webusb-with-arduino-and-tinyusb/compatible-microcontrollers\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://learn.adafruit.com/using-webusb-with-arduino-and-tinyusb/compatible-microcontrollers</a></p></li>\n</ul>\n<p> Midi USB Supports</p>\n<ul>\n<li><p>AVR core &gt; 1.6.8</p></li>\n<li><p>SAMcore &gt; 1.6.4</p></li>\n<li><p>SAMDcore &gt; 1.6.1</p></li>\n<li><p>For any microController w/ native usb capabailities </p></li>\n<li><p>9ATMega32u4 &amp; ARM Boards</p></li>\n<li><p>leonardo, micro, zero</p></li>\n</ul>\n<p> Tiny USB Supports</p>\n<ul>\n<li><p>nRF52_arduino</p></li>\n<li><p>ArduinoCore_SAMD</p></li>\n<li><p>expressif : ESP32-S2</p></li>\n<li><p>STM: STM32</p></li>\n<li><p>SAMD: SAMD 11, 21, 51</p></li>\n</ul>\n <h1>Board - Library Compatability</h1>\n<p> Pro Trinket </p>\n<ul>\n<li><p><a href=\"https://github.com/adafruit/Pro_Trinket_USB_Mouse\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/adafruit/Pro_Trinket_USB_Mouse</a></p></li>\n</ul>\n<p> Pro Micro</p>\n<ul>\n<li><p>atmega32U4</p></li>\n<li><p><a href=\"https://www.iot-experiments.com/webusb-arduino-pro-micro-atmega32u4/\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.iot-experiments.com/webusb-arduino-pro-micro-atmega32u4/</a></p></li>\n</ul>\n<p> Circuit Playground Express</p>\n<ul>\n<li><p>ATSAMD21</p></li>\n<li><p><a href=\"https://learn.adafruit.com/adafruit-circuit-playground-express/circuitpython-hid-keyboard-and-mouse\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://learn.adafruit.com/adafruit-circuit-playground-express/circuitpython-hid-keyboard-and-mouse</a></p></li>\n</ul>\n<p> Circuit Playground</p>\n<ul>\n<li><p>ATMega32u4</p></li>\n<li><p>?noncompat w/tinyUsb?</p></li>\n</ul>\n<p> Arduino Zero(42$)/ Genuino</p>\n<ul>\n<li><p>SAMD21</p></li>\n</ul>\n<p> Arduino Pro Mini </p>\n<ul>\n<li><p>atmega 328 needs usb-serial adapter</p></li>\n</ul>\n<p> SEEDuino Xiao </p>\n<ul>\n<li><p>SAMD21 small $5</p></li>\n</ul>\n<p> Teensy Boards</p>\n<ul>\n<li><p>Natively Support USB</p></li>\n</ul>\n <p>most arduino boards are atmega328 or atmega32u4</p>\n<p> atmega32u4 </p>\n<ul>\n<li><p>supports midiusb as it is native usb, as do all avr chips.</p></li>\n</ul>\n<p> SAMD 21</p>\n<ul>\n<li><p>atmels mcu&#39;s boards will always  provide keyboard and mice emulation. </p></li>\n<li><p>uses 32 bit ARM core m0+</p></li>\n</ul>\n <h1>midi</h1>\n <p>// <a href=\"https://github.com/georgemandis/circuit-playground-midi-multi-tool\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://github.com/georgemandis/circuit-playground-midi-multi-tool</a></p>\n<p> // <a href=\"https://www.arduino.cc/en/Tutorial/LibraryExamples/EEPROMRead\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.arduino.cc/en/Tutorial/LibraryExamples/EEPROMRead</a>\n // <a href=\"https://www.arduino.cc/en/Tutorial/LibraryExamples/EEPROMIteration\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.arduino.cc/en/Tutorial/LibraryExamples/EEPROMIteration</a>\n // </p>\n<p> // <a href=\"https://www.midimountain.com/midi/midi_status.htm\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.midimountain.com/midi/midi_status.htm</a></p>\n<p> // Name (status byte) 2nd byte (data 1) 3rd byte (data2)\n // Note on/Off(1/16) Number (0-127) Note Velocity (0-127)</p>\n<p> // <a href=\"https://www.midimountain.com/midi/midi_control_mode.html\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">https://www.midimountain.com/midi/midi_control_mode.html</a></p>\n   <ul>\n<li><p>If not exists -&gt; write vars into eeprom</p></li>\n<li><p>pull vars from eeprom</p></li>\n<li><p>use vars as write channle, mode, note</p></li>\n<li><p>on recieve midi -&gt; midi recieved callback()</p></li>\n<li><p>insert into eeprom</p></li>\n</ul>\n<p> midi usb - 1) send back whatever was given (chn, action/note, velocity, etc..) &lt;- 2) store each seperately in eeprom 3) automate this n times. \n sufian - video chat\n david - wp features</p>\n <h3>General Midi Spec</h3>\n<p> NoteOnMsg</p>\n<ul>\n<li><p>Status Byte - KeyBend, Pitch, Noteof, Drums : 10010000</p></li>\n<li><ul>\n<li><p>first bit is..</p></li>\n</ul>\n</li>\n<li><ul>\n<li><p>first 4bits are: note on command : 1001</p></li>\n</ul>\n</li>\n<li><ul>\n<li><p>last 4 bits are: ch.1 : 0000</p></li>\n</ul>\n</li>\n<li><p>Data Byte - Note Key #, #&#39;s35-81=drums, 56=cowbell : 01111101 = 60(c3) </p></li>\n<li><p>Data Byte - Velocity = 01111111 or 00000000</p></li>\n</ul>\n <ol start=\"0\">\n<li><p>connect to device</p></li>\n<li><p>choose 1 of 4 buttons</p></li>\n<li><p>choose type toggle trigger mommentum</p></li>\n<li><p>choose midi ch, cmd</p></li>\n</ol>\n <h3>(ch,cc,val)</h3>\n<h4>Assign</h4>\n<ol>\n<li><p>Channel</p></li>\n</ol>\n<ul>\n<li><p>abreviations: ch</p></li>\n<li><p>values 1-16</p></li>\n</ul>\n<ol start=\"2\">\n<li><p>Message</p></li>\n</ol>\n<ul>\n<li><p>abreviations: cc</p></li>\n<li><p>values 0-127</p></li>\n</ul>\n<ol start=\"3\">\n<li><p>Type</p></li>\n</ol>\n<h4>Types</h4>\n<p> Mommentum</p>\n<ol>\n<li><p>switch on ( 1, 121, 0 ) -&gt; Start on Downpress</p></li>\n<li><p>switch off (1, 121, 1 ) -&gt; Cut on Release</p></li>\n</ol>\n<p> Toggle</p>\n<ol>\n<li><p>switch on ( 1, 125, 0 ) -&gt; Starts on Downpress &amp; kept on Release</p></li>\n<li><p>switch off (1, 125, 1 ) -&gt; Starts on Downpress &amp; kept on Release</p></li>\n</ol>\n<p> Trigger</p>\n<ol>\n<li><p>Fires Midi on ( 1, 128, 1 ) -&gt; Same message every time</p></li>\n</ol>\n <p>for the very reason that keys do no take commands from ableton in order for remapping to work, neither do my boxes. It is purely an internal schema that is created in-app.</p>\n<h3><a href=\"https://help.ableton.com/hc/en-us/articles/360000038859-Making-custom-MIDI-Mappings\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Ableton Midi Mappings</a></h3>\n<h3>Live</h3>\n<p> You might want to create your own custom MIDI mappings in the following situations:</p>\n<ul>\n<li><p>Your controller doesn&#39;t have an included <a href=\"https://help.ableton.com/hc/en-us/articles/209774285\" onclick=\"window.pingServer(this)\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">Control Surfaces</a>. Specially written scripts which allow controllers to interface with Live. They enable tactile control of Live through pre-defined parameters. </p></li>\n<li><p>Or you want to override some parameters.</p></li>\n</ul>\n"}