{"meta":{"title":"Lights","summary":"Connect and control LED's with this tool.","keywords":"['3D','3D Printing', 'Crypto', 'metaverse', 'navigation']","filename":"lights"},"content":"<img src='/images/covers/lights1.webp'> <details open class=\"details\">\n <summary> <h2 id=\"intro\">Intro</h2>\n </summary> <p>This section is dedicated to a work in <a href=\"./lights/aboutlights.html\">progress</a>!</p>\n </details>\n <details open class=\"details\">\n <summary> <h2 id=\"section-links\">Section Links</h2>\n </summary> <ul>\n<li><p><a href=\"./lights/aboutlights.html\">About</a> - &quot;The Big Picture&quot;</p></li>\n<li><p><a href=\"./lights/wled.html\">Wled</a> - Reference Notes for installing WLED&#39;s firmware</p></li>\n<li><p><a href=\"./lights/upload.html\">Upload</a> - Using A serial terminal within an IPYNB to flash firmware and log/plot outputs </p></li>\n<li><p><a href=\"./lights/esp_notes.html\">Misc Notes</a> - All the nitty gritty details</p></li>\n</ul>\n </details>\n <details open>\n <summary> <h2 id=\"dashboard\">Dashboard</h2>\n </summary> <p>If you have a node, get to your dashboard by connecting with your device here:</p>\n <script>\n     console.log('heckya');\n     // current solution of conditionally loading article-dependent scripts from main.js is bloaty\n     // having ipynb import/execute scripts is cleaner but mean's scripts aren't webpacked unless done elsewhere. \n </script> <div id='lights'></div>\n <!-- index.html -->\n <!-- script type=\"module\" src=\"js/lights.js\"></script -->\n <script type=\"module\">\n   console.log('starting')\n   import { getContent } from './ipynb/lights/lights.js'\n   console.log(getContent)\n   console.log('whooo')\n   console.log(window.lights)\n   window.lights.innerHTML = getContent()\n </script> </details>"}