import{BufferGeometry,FileLoader,Float32BufferAttribute,Loader,Matrix3,Path,ShapePath,Vector2,Vector3}from"./three.js";var tempV2_1,tempV2_2,tempV2_3,tempV2_4,tempV2_5,tempV2_6,tempV2_7,lastPointL,lastPointR,point0L,point0R,currentPointL,currentPointR,nextPointL,nextPointR,innerPoint,outerPoint,SVGLoader=function(t){Loader.call(this,t),this.defaultDPI=90,this.defaultUnit="px"};SVGLoader.prototype=Object.assign(Object.create(Loader.prototype),{constructor:SVGLoader,load:function(t,e,r,a){var n=this,o=new FileLoader(n.manager);o.setPath(n.path),o.setRequestHeader(n.requestHeader),o.setWithCredentials(n.withCredentials),o.load(t,(function(r){try{e(n.parse(r))}catch(e){a?a(e):console.error(e),n.manager.itemError(t)}}),r,a)},parse:function(t){var e=this;function parseArcCommand(t,e,r,a,n,o,i,s){if(0!=e&&0!=r){a=a*Math.PI/180,e=Math.abs(e),r=Math.abs(r);var l=(i.x-s.x)/2,d=(i.y-s.y)/2,c=Math.cos(a)*l+Math.sin(a)*d,p=-Math.sin(a)*l+Math.cos(a)*d,u=e*e,V=r*r,x=c*c,m=p*p,y=x/u+m/V;if(y>1){var h=Math.sqrt(y);u=(e*=h)*e,V=(r*=h)*r}var f=u*m+V*x,P=(u*V-f)/f,g=Math.sqrt(Math.max(0,P));n===o&&(g=-g);var b=g*e*p/r,v=-g*r*c/e,_=Math.cos(a)*b-Math.sin(a)*v+(i.x+s.x)/2,k=Math.sin(a)*b+Math.cos(a)*v+(i.y+s.y)/2,L=svgAngle(1,0,(c-b)/e,(p-v)/r),S=svgAngle((c-b)/e,(p-v)/r,(-c-b)/e,(-p-v)/r)%(2*Math.PI);t.currentPath.absellipse(_,k,e,r,L,L+S,0===o,a)}else t.lineTo(s.x,s.y)}function svgAngle(t,e,r,a){var n=t*r+e*a,o=Math.sqrt(t*t+e*e)*Math.sqrt(r*r+a*a),i=Math.acos(Math.max(-1,Math.min(1,n/o)));return t*a-e*r<0&&(i=-i),i}function parseStyle(t,e){e=Object.assign({},e);var r={};if(t.hasAttribute("class"))for(var a=t.getAttribute("class").split(/\s/).filter(Boolean).map((t=>t.trim())),n=0;n<a.length;n++)r=Object.assign(r,o["."+a[n]]);function addStyle(a,n,o){void 0===o&&(o=function copy(t){return t.startsWith("url")&&console.warn("SVGLoader: url access in attributes is not implemented."),t}),t.hasAttribute(a)&&(e[n]=o(t.getAttribute(a))),r[a]&&(e[n]=o(r[a])),t.style&&""!==t.style[a]&&(e[n]=o(t.style[a]))}function clamp(t){return Math.max(0,Math.min(1,parseFloatWithUnits(t)))}function positive(t){return Math.max(0,parseFloatWithUnits(t))}return t.hasAttribute("id")&&(r=Object.assign(r,o["#"+t.getAttribute("id")])),addStyle("fill","fill"),addStyle("fill-opacity","fillOpacity",clamp),addStyle("opacity","opacity",clamp),addStyle("stroke","stroke"),addStyle("stroke-opacity","strokeOpacity",clamp),addStyle("stroke-width","strokeWidth",positive),addStyle("stroke-linejoin","strokeLineJoin"),addStyle("stroke-linecap","strokeLineCap"),addStyle("stroke-miterlimit","strokeMiterLimit",positive),addStyle("visibility","visibility"),e}function getReflection(t,e){return t-(e-t)}function parseFloats(t){for(var e=t.split(/[\s,]+|(?=\s?[+\-])/),r=0;r<e.length;r++){var a=e[r];if(a.indexOf(".")!==a.lastIndexOf("."))for(var n=a.split("."),o=2;o<n.length;o++)e.splice(r+o-1,0,"0."+n[o]);e[r]=parseFloatWithUnits(a)}return e}var r=["mm","cm","in","pt","pc","px"],a={mm:{mm:1,cm:.1,in:1/25.4,pt:72/25.4,pc:6/25.4,px:-1},cm:{mm:10,cm:1,in:1/2.54,pt:72/2.54,pc:6/2.54,px:-1},in:{mm:25.4,cm:2.54,in:1,pt:72,pc:6,px:-1},pt:{mm:25.4/72,cm:2.54/72,in:1/72,pt:1,pc:6/72,px:-1},pc:{mm:25.4/6,cm:2.54/6,in:1/6,pt:12,pc:1,px:-1},px:{px:1}};function parseFloatWithUnits(t){var n="px";if("string"==typeof t||t instanceof String)for(var o=0,i=r.length;o<i;o++){var s=r[o];if(t.endsWith(s)){n=s,t=t.substring(0,t.length-s.length);break}}var l=void 0;return"px"===n&&"px"!==e.defaultUnit?l=a.in[e.defaultUnit]/e.defaultDPI:(l=a[n][e.defaultUnit])<0&&(l=a[n].in*e.defaultDPI),l*parseFloat(t)}function getTransformScaleX(t){var e=t.elements;return Math.sqrt(e[0]*e[0]+e[1]*e[1])}function getTransformScaleY(t){var e=t.elements;return Math.sqrt(e[3]*e[3]+e[4]*e[4])}var n=[],o={},i=[],s=new Matrix3,l=new Matrix3,d=new Matrix3,c=new Matrix3,p=new Vector2,u=new Vector3,V=new Matrix3,x=(new DOMParser).parseFromString(t,"image/svg+xml");return function parseNode(t,e){if(1===t.nodeType){var r=function getNodeTransform(t){if(!(t.hasAttribute("transform")||"use"===t.nodeName&&(t.hasAttribute("x")||t.hasAttribute("y"))))return null;var e=function parseNodeTransform(t){var e=new Matrix3,r=s;if("use"===t.nodeName&&(t.hasAttribute("x")||t.hasAttribute("y"))){var a=parseFloatWithUnits(t.getAttribute("x")),n=parseFloatWithUnits(t.getAttribute("y"));e.translate(a,n)}if(t.hasAttribute("transform"))for(var o=t.getAttribute("transform").split(")"),i=o.length-1;i>=0;i--){var p=o[i].trim();if(""!==p){var u=p.indexOf("("),V=p.length;if(u>0&&u<V){var x=p.substr(0,u),m=parseFloats(p.substr(u+1,V-u-1));switch(r.identity(),x){case"translate":if(m.length>=1){n=a=m[0];m.length>=2&&(n=m[1]),r.translate(a,n)}break;case"rotate":if(m.length>=1){var y=0,h=0,f=0;y=-m[0]*Math.PI/180,m.length>=3&&(h=m[1],f=m[2]),l.identity().translate(-h,-f),d.identity().rotate(y),c.multiplyMatrices(d,l),l.identity().translate(h,f),r.multiplyMatrices(l,c)}break;case"scale":if(m.length>=1){var P=m[0],g=P;m.length>=2&&(g=m[1]),r.scale(P,g)}break;case"skewX":1===m.length&&r.set(1,Math.tan(m[0]*Math.PI/180),0,0,1,0,0,0,1);break;case"skewY":1===m.length&&r.set(1,0,0,Math.tan(m[0]*Math.PI/180),1,0,0,0,1);break;case"matrix":6===m.length&&r.set(m[0],m[2],m[4],m[1],m[3],m[5],0,0,1)}}e.premultiply(r)}}return e}(t);i.length>0&&e.premultiply(i[i.length-1]);return V.copy(e),i.push(e),e}(t),a=!0,x=null;switch(t.nodeName){case"svg":break;case"style":!function parseCSSStylesheet(t){if(!t.sheet||!t.sheet.cssRules||!t.sheet.cssRules.length)return;for(var e=0;e<t.sheet.cssRules.length;e++){var r=t.sheet.cssRules[e];if(1===r.type)for(var a=r.selectorText.split(/,/gm).filter(Boolean).map((t=>t.trim())),n=0;n<a.length;n++)o[a[n]]=Object.assign(o[a[n]]||{},r.style)}}(t);break;case"g":e=parseStyle(t,e);break;case"path":e=parseStyle(t,e),t.hasAttribute("d")&&(x=function parsePathNode(t){for(var e=new ShapePath,r=new Vector2,a=new Vector2,n=new Vector2,o=!0,i=!1,s=t.getAttribute("d").match(/[a-df-z][^a-df-z]*/gi),l=0,d=s.length;l<d;l++){var c=s[l],p=c.charAt(0),u=c.substr(1).trim();switch(!0===o&&(i=!0,o=!1),p){case"M":for(var V=0,x=(f=parseFloats(u)).length;V<x;V+=2)r.x=f[V+0],r.y=f[V+1],a.x=r.x,a.y=r.y,0===V?e.moveTo(r.x,r.y):e.lineTo(r.x,r.y),0===V&&!0===i&&n.copy(r);break;case"H":for(V=0,x=(f=parseFloats(u)).length;V<x;V++)r.x=f[V],a.x=r.x,a.y=r.y,e.lineTo(r.x,r.y),0===V&&!0===i&&n.copy(r);break;case"V":for(V=0,x=(f=parseFloats(u)).length;V<x;V++)r.y=f[V],a.x=r.x,a.y=r.y,e.lineTo(r.x,r.y),0===V&&!0===i&&n.copy(r);break;case"L":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=2)r.x=f[V+0],r.y=f[V+1],a.x=r.x,a.y=r.y,e.lineTo(r.x,r.y),0===V&&!0===i&&n.copy(r);break;case"C":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=6)e.bezierCurveTo(f[V+0],f[V+1],f[V+2],f[V+3],f[V+4],f[V+5]),a.x=f[V+2],a.y=f[V+3],r.x=f[V+4],r.y=f[V+5],0===V&&!0===i&&n.copy(r);break;case"S":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=4)e.bezierCurveTo(getReflection(r.x,a.x),getReflection(r.y,a.y),f[V+0],f[V+1],f[V+2],f[V+3]),a.x=f[V+0],a.y=f[V+1],r.x=f[V+2],r.y=f[V+3],0===V&&!0===i&&n.copy(r);break;case"Q":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=4)e.quadraticCurveTo(f[V+0],f[V+1],f[V+2],f[V+3]),a.x=f[V+0],a.y=f[V+1],r.x=f[V+2],r.y=f[V+3],0===V&&!0===i&&n.copy(r);break;case"T":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=2){var m=getReflection(r.x,a.x),y=getReflection(r.y,a.y);e.quadraticCurveTo(m,y,f[V+0],f[V+1]),a.x=m,a.y=y,r.x=f[V+0],r.y=f[V+1],0===V&&!0===i&&n.copy(r)}break;case"A":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=7)if(f[V+5]!=r.x||f[V+6]!=r.y){var h=r.clone();r.x=f[V+5],r.y=f[V+6],a.x=r.x,a.y=r.y,parseArcCommand(e,f[V],f[V+1],f[V+2],f[V+3],f[V+4],h,r),0===V&&!0===i&&n.copy(r)}break;case"m":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=2)r.x+=f[V+0],r.y+=f[V+1],a.x=r.x,a.y=r.y,0===V?e.moveTo(r.x,r.y):e.lineTo(r.x,r.y),0===V&&!0===i&&n.copy(r);break;case"h":for(V=0,x=(f=parseFloats(u)).length;V<x;V++)r.x+=f[V],a.x=r.x,a.y=r.y,e.lineTo(r.x,r.y),0===V&&!0===i&&n.copy(r);break;case"v":for(V=0,x=(f=parseFloats(u)).length;V<x;V++)r.y+=f[V],a.x=r.x,a.y=r.y,e.lineTo(r.x,r.y),0===V&&!0===i&&n.copy(r);break;case"l":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=2)r.x+=f[V+0],r.y+=f[V+1],a.x=r.x,a.y=r.y,e.lineTo(r.x,r.y),0===V&&!0===i&&n.copy(r);break;case"c":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=6)e.bezierCurveTo(r.x+f[V+0],r.y+f[V+1],r.x+f[V+2],r.y+f[V+3],r.x+f[V+4],r.y+f[V+5]),a.x=r.x+f[V+2],a.y=r.y+f[V+3],r.x+=f[V+4],r.y+=f[V+5],0===V&&!0===i&&n.copy(r);break;case"s":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=4)e.bezierCurveTo(getReflection(r.x,a.x),getReflection(r.y,a.y),r.x+f[V+0],r.y+f[V+1],r.x+f[V+2],r.y+f[V+3]),a.x=r.x+f[V+0],a.y=r.y+f[V+1],r.x+=f[V+2],r.y+=f[V+3],0===V&&!0===i&&n.copy(r);break;case"q":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=4)e.quadraticCurveTo(r.x+f[V+0],r.y+f[V+1],r.x+f[V+2],r.y+f[V+3]),a.x=r.x+f[V+0],a.y=r.y+f[V+1],r.x+=f[V+2],r.y+=f[V+3],0===V&&!0===i&&n.copy(r);break;case"t":for(V=0,x=(f=parseFloats(u)).length;V<x;V+=2){m=getReflection(r.x,a.x),y=getReflection(r.y,a.y);e.quadraticCurveTo(m,y,r.x+f[V+0],r.y+f[V+1]),a.x=m,a.y=y,r.x=r.x+f[V+0],r.y=r.y+f[V+1],0===V&&!0===i&&n.copy(r)}break;case"a":var f;for(V=0,x=(f=parseFloats(u)).length;V<x;V+=7)if(0!=f[V+5]||0!=f[V+6]){h=r.clone();r.x+=f[V+5],r.y+=f[V+6],a.x=r.x,a.y=r.y,parseArcCommand(e,f[V],f[V+1],f[V+2],f[V+3],f[V+4],h,r),0===V&&!0===i&&n.copy(r)}break;case"Z":case"z":e.currentPath.autoClose=!0,e.currentPath.curves.length>0&&(r.copy(n),e.currentPath.currentPoint.copy(r),o=!0);break;default:console.warn(c)}i=!1}return e}(t));break;case"rect":e=parseStyle(t,e),x=function parseRectNode(t){var e=parseFloatWithUnits(t.getAttribute("x")||0),r=parseFloatWithUnits(t.getAttribute("y")||0),a=parseFloatWithUnits(t.getAttribute("rx")||0),n=parseFloatWithUnits(t.getAttribute("ry")||0),o=parseFloatWithUnits(t.getAttribute("width")),i=parseFloatWithUnits(t.getAttribute("height")),s=new ShapePath;s.moveTo(e+2*a,r),s.lineTo(e+o-2*a,r),(0!==a||0!==n)&&s.bezierCurveTo(e+o,r,e+o,r,e+o,r+2*n);s.lineTo(e+o,r+i-2*n),(0!==a||0!==n)&&s.bezierCurveTo(e+o,r+i,e+o,r+i,e+o-2*a,r+i);s.lineTo(e+2*a,r+i),(0!==a||0!==n)&&s.bezierCurveTo(e,r+i,e,r+i,e,r+i-2*n);s.lineTo(e,r+2*n),(0!==a||0!==n)&&s.bezierCurveTo(e,r,e,r,e+2*a,r);return s}(t);break;case"polygon":e=parseStyle(t,e),x=function parsePolygonNode(t){function iterator(t,e,n){var o=parseFloatWithUnits(e),i=parseFloatWithUnits(n);0===a?r.moveTo(o,i):r.lineTo(o,i),a++}var e=/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,r=new ShapePath,a=0;return t.getAttribute("points").replace(e,iterator),r.currentPath.autoClose=!0,r}(t);break;case"polyline":e=parseStyle(t,e),x=function parsePolylineNode(t){function iterator(t,e,n){var o=parseFloatWithUnits(e),i=parseFloatWithUnits(n);0===a?r.moveTo(o,i):r.lineTo(o,i),a++}var e=/(-?[\d\.?]+)[,|\s](-?[\d\.?]+)/g,r=new ShapePath,a=0;return t.getAttribute("points").replace(e,iterator),r.currentPath.autoClose=!1,r}(t);break;case"circle":e=parseStyle(t,e),x=function parseCircleNode(t){var e=parseFloatWithUnits(t.getAttribute("cx")),r=parseFloatWithUnits(t.getAttribute("cy")),a=parseFloatWithUnits(t.getAttribute("r")),n=new Path;n.absarc(e,r,a,0,2*Math.PI);var o=new ShapePath;return o.subPaths.push(n),o}(t);break;case"ellipse":e=parseStyle(t,e),x=function parseEllipseNode(t){var e=parseFloatWithUnits(t.getAttribute("cx")),r=parseFloatWithUnits(t.getAttribute("cy")),a=parseFloatWithUnits(t.getAttribute("rx")),n=parseFloatWithUnits(t.getAttribute("ry")),o=new Path;o.absellipse(e,r,a,n,0,2*Math.PI);var i=new ShapePath;return i.subPaths.push(o),i}(t);break;case"line":e=parseStyle(t,e),x=function parseLineNode(t){var e=parseFloatWithUnits(t.getAttribute("x1")),r=parseFloatWithUnits(t.getAttribute("y1")),a=parseFloatWithUnits(t.getAttribute("x2")),n=parseFloatWithUnits(t.getAttribute("y2")),o=new ShapePath;return o.moveTo(e,r),o.lineTo(a,n),o.currentPath.autoClose=!1,o}(t);break;case"defs":a=!1;break;case"use":e=parseStyle(t,e);var m=t.href.baseVal.substring(1),y=t.viewportElement.getElementById(m);y?parseNode(y,e):console.warn("SVGLoader: 'use node' references non-existent node id: "+m)}if(x&&(void 0!==e.fill&&"none"!==e.fill&&x.color.setStyle(e.fill),function transformPath(t,e){function transfVec2(t){u.set(t.x,t.y,1).applyMatrix3(e),t.set(u.x,u.y)}for(var r=function isTransformRotated(t){return 0!==t.elements[1]||0!==t.elements[3]}(e),a=t.subPaths,n=0,o=a.length;n<o;n++)for(var i=a[n].curves,s=0;s<i.length;s++){var l=i[s];l.isLineCurve?(transfVec2(l.v1),transfVec2(l.v2)):l.isCubicBezierCurve?(transfVec2(l.v0),transfVec2(l.v1),transfVec2(l.v2),transfVec2(l.v3)):l.isQuadraticBezierCurve?(transfVec2(l.v0),transfVec2(l.v1),transfVec2(l.v2)):l.isEllipseCurve&&(r&&console.warn("SVGLoader: Elliptic arc or ellipse rotation or skewing is not implemented."),p.set(l.aX,l.aY),transfVec2(p),l.aX=p.x,l.aY=p.y,l.xRadius*=getTransformScaleX(e),l.yRadius*=getTransformScaleY(e))}}(x,V),n.push(x),x.userData={node:t,style:e}),a)for(var h=t.childNodes,f=0;f<h.length;f++)parseNode(h[f],e);r&&(i.pop(),i.length>0?V.copy(i[i.length-1]):V.identity())}}(x.documentElement,{fill:"#000",fillOpacity:1,strokeOpacity:1,strokeWidth:1,strokeLineJoin:"miter",strokeLineCap:"butt",strokeMiterLimit:4}),{paths:n,xml:x.documentElement}}}),SVGLoader.getStrokeStyle=function(t,e,r,a,n){return{strokeColor:e=void 0!==e?e:"#000",strokeWidth:t=void 0!==t?t:1,strokeLineJoin:r=void 0!==r?r:"miter",strokeLineCap:a=void 0!==a?a:"butt",strokeMiterLimit:n=void 0!==n?n:4}},SVGLoader.pointsToStroke=function(t,e,r,a){var n=[],o=[],i=[];if(0===SVGLoader.pointsToStrokeWithBuffers(t,e,r,a,n,o,i))return null;var s=new BufferGeometry;return s.setAttribute("position",new Float32BufferAttribute(n,3)),s.setAttribute("normal",new Float32BufferAttribute(o,3)),s.setAttribute("uv",new Float32BufferAttribute(i,2)),s},SVGLoader.pointsToStrokeWithBuffers=(tempV2_1=new Vector2,tempV2_2=new Vector2,tempV2_3=new Vector2,tempV2_4=new Vector2,tempV2_5=new Vector2,tempV2_6=new Vector2,tempV2_7=new Vector2,lastPointL=new Vector2,lastPointR=new Vector2,point0L=new Vector2,point0R=new Vector2,currentPointL=new Vector2,currentPointR=new Vector2,nextPointL=new Vector2,nextPointR=new Vector2,innerPoint=new Vector2,outerPoint=new Vector2,function(t,e,r,a,n,o,i,s){r=void 0!==r?r:12,a=void 0!==a?a:.001,s=void 0!==s?s:0;var l=(t=function removeDuplicatedPoints(t){for(var e=!1,r=1,n=t.length-1;r<n;r++)if(t[r].distanceTo(t[r+1])<a){e=!0;break}if(!e)return t;var o=[];for(o.push(t[0]),r=1,n=t.length-1;r<n;r++)t[r].distanceTo(t[r+1])>=a&&o.push(t[r]);return o.push(t[t.length-1]),o}(t)).length;if(l<2)return 0;var d,c,p,u,V,x=t[0].equals(t[l-1]),m=t[0],y=e.strokeWidth/2,h=1/(l-1),f=0,P=!1,g=0,b=3*s,v=2*s;getNormal(t[0],t[1],tempV2_1).multiplyScalar(y),lastPointL.copy(t[0]).sub(tempV2_1),lastPointR.copy(t[0]).add(tempV2_1),point0L.copy(lastPointL),point0R.copy(lastPointR);for(var _=1;_<l;_++){d=t[_],c=_===l-1?x?t[1]:void 0:t[_+1];var k=tempV2_1;getNormal(m,d,k),tempV2_3.copy(k).multiplyScalar(y),currentPointL.copy(d).sub(tempV2_3),currentPointR.copy(d).add(tempV2_3);var L=f+h;if(p=!1,void 0!==c){getNormal(d,c,tempV2_2),tempV2_3.copy(tempV2_2).multiplyScalar(y),nextPointL.copy(d).sub(tempV2_3),nextPointR.copy(d).add(tempV2_3),u=!0,tempV2_3.subVectors(c,m),k.dot(tempV2_3)<0&&(u=!1),1===_&&(P=u),tempV2_3.subVectors(c,d),tempV2_3.normalize();var S=Math.abs(k.dot(tempV2_3));if(0!==S){var A=y/S;tempV2_3.multiplyScalar(-A),tempV2_4.subVectors(d,m),tempV2_5.copy(tempV2_4).setLength(A).add(tempV2_3),innerPoint.copy(tempV2_5).negate();var R=tempV2_5.length(),w=tempV2_4.length();tempV2_4.divideScalar(w),tempV2_6.subVectors(c,d);var M=tempV2_6.length();switch(tempV2_6.divideScalar(M),tempV2_4.dot(innerPoint)<w&&tempV2_6.dot(innerPoint)<M&&(p=!0),outerPoint.copy(tempV2_5).add(d),innerPoint.add(d),V=!1,p?u?(nextPointR.copy(innerPoint),currentPointR.copy(innerPoint)):(nextPointL.copy(innerPoint),currentPointL.copy(innerPoint)):makeSegmentTriangles(),e.strokeLineJoin){case"bevel":makeSegmentWithBevelJoin(u,p,L);break;case"round":createSegmentTrianglesWithMiddleSection(u,p),u?makeCircularSector(d,currentPointL,nextPointL,L,0):makeCircularSector(d,nextPointR,currentPointR,L,1);break;default:var T=y*e.strokeMiterLimit/R;if(T<1){if("miter-clip"!==e.strokeLineJoin){makeSegmentWithBevelJoin(u,p,L);break}createSegmentTrianglesWithMiddleSection(u,p),u?(tempV2_6.subVectors(outerPoint,currentPointL).multiplyScalar(T).add(currentPointL),tempV2_7.subVectors(outerPoint,nextPointL).multiplyScalar(T).add(nextPointL),addVertex(currentPointL,L,0),addVertex(tempV2_6,L,0),addVertex(d,L,.5),addVertex(d,L,.5),addVertex(tempV2_6,L,0),addVertex(tempV2_7,L,0),addVertex(d,L,.5),addVertex(tempV2_7,L,0),addVertex(nextPointL,L,0)):(tempV2_6.subVectors(outerPoint,currentPointR).multiplyScalar(T).add(currentPointR),tempV2_7.subVectors(outerPoint,nextPointR).multiplyScalar(T).add(nextPointR),addVertex(currentPointR,L,1),addVertex(tempV2_6,L,1),addVertex(d,L,.5),addVertex(d,L,.5),addVertex(tempV2_6,L,1),addVertex(tempV2_7,L,1),addVertex(d,L,.5),addVertex(tempV2_7,L,1),addVertex(nextPointR,L,1))}else p?(u?(addVertex(lastPointR,f,1),addVertex(lastPointL,f,0),addVertex(outerPoint,L,0),addVertex(lastPointR,f,1),addVertex(outerPoint,L,0),addVertex(innerPoint,L,1)):(addVertex(lastPointR,f,1),addVertex(lastPointL,f,0),addVertex(outerPoint,L,1),addVertex(lastPointL,f,0),addVertex(innerPoint,L,0),addVertex(outerPoint,L,1)),u?nextPointL.copy(outerPoint):nextPointR.copy(outerPoint)):u?(addVertex(currentPointL,L,0),addVertex(outerPoint,L,0),addVertex(d,L,.5),addVertex(d,L,.5),addVertex(outerPoint,L,0),addVertex(nextPointL,L,0)):(addVertex(currentPointR,L,1),addVertex(outerPoint,L,1),addVertex(d,L,.5),addVertex(d,L,.5),addVertex(outerPoint,L,1),addVertex(nextPointR,L,1)),V=!0}}else makeSegmentTriangles()}else makeSegmentTriangles();x||_!==l-1||addCapGeometry(t[0],point0L,point0R,u,!0,f),f=L,m=d,lastPointL.copy(nextPointL),lastPointR.copy(nextPointR)}if(x){if(p&&n){var F=outerPoint,C=innerPoint;P!==u&&(F=innerPoint,C=outerPoint),u?(V||P)&&(C.toArray(n,0),C.toArray(n,9),V&&F.toArray(n,3)):!V&&P||(C.toArray(n,3),C.toArray(n,9),V&&F.toArray(n,0))}}else addCapGeometry(d,currentPointL,currentPointR,u,!1,L);return g;function getNormal(t,e,r){return r.subVectors(e,t),r.set(-r.y,r.x).normalize()}function addVertex(t,e,r){n&&(n[b]=t.x,n[b+1]=t.y,n[b+2]=0,o&&(o[b]=0,o[b+1]=0,o[b+2]=1),b+=3,i&&(i[v]=e,i[v+1]=r,v+=2)),g+=3}function makeCircularSector(t,e,a,n,o){tempV2_1.copy(e).sub(t).normalize(),tempV2_2.copy(a).sub(t).normalize();var i=Math.PI,s=tempV2_1.dot(tempV2_2);Math.abs(s)<1&&(i=Math.abs(Math.acos(s))),i/=r,tempV2_3.copy(e);for(var l=0,d=r-1;l<d;l++)tempV2_4.copy(tempV2_3).rotateAround(t,i),addVertex(tempV2_3,n,o),addVertex(tempV2_4,n,o),addVertex(t,n,.5),tempV2_3.copy(tempV2_4);addVertex(tempV2_4,n,o),addVertex(a,n,o),addVertex(t,n,.5)}function makeSegmentTriangles(){addVertex(lastPointR,f,1),addVertex(lastPointL,f,0),addVertex(currentPointL,L,0),addVertex(lastPointR,f,1),addVertex(currentPointL,L,1),addVertex(currentPointR,L,0)}function makeSegmentWithBevelJoin(t,e,r){e?t?(addVertex(lastPointR,f,1),addVertex(lastPointL,f,0),addVertex(currentPointL,L,0),addVertex(lastPointR,f,1),addVertex(currentPointL,L,0),addVertex(innerPoint,L,1),addVertex(currentPointL,r,0),addVertex(nextPointL,r,0),addVertex(innerPoint,r,.5)):(addVertex(lastPointR,f,1),addVertex(lastPointL,f,0),addVertex(currentPointR,L,1),addVertex(lastPointL,f,0),addVertex(innerPoint,L,0),addVertex(currentPointR,L,1),addVertex(currentPointR,r,1),addVertex(nextPointR,r,0),addVertex(innerPoint,r,.5)):t?(addVertex(currentPointL,r,0),addVertex(nextPointL,r,0),addVertex(d,r,.5)):(addVertex(currentPointR,r,1),addVertex(nextPointR,r,0),addVertex(d,r,.5))}function createSegmentTrianglesWithMiddleSection(t,e){e&&(t?(addVertex(lastPointR,f,1),addVertex(lastPointL,f,0),addVertex(currentPointL,L,0),addVertex(lastPointR,f,1),addVertex(currentPointL,L,0),addVertex(innerPoint,L,1),addVertex(currentPointL,f,0),addVertex(d,L,.5),addVertex(innerPoint,L,1),addVertex(d,L,.5),addVertex(nextPointL,f,0),addVertex(innerPoint,L,1)):(addVertex(lastPointR,f,1),addVertex(lastPointL,f,0),addVertex(currentPointR,L,1),addVertex(lastPointL,f,0),addVertex(innerPoint,L,0),addVertex(currentPointR,L,1),addVertex(currentPointR,f,1),addVertex(innerPoint,L,0),addVertex(d,L,.5),addVertex(d,L,.5),addVertex(innerPoint,L,0),addVertex(nextPointR,f,1)))}function addCapGeometry(t,r,a,o,i,s){switch(e.strokeLineCap){case"round":i?makeCircularSector(t,a,r,s,.5):makeCircularSector(t,r,a,s,.5);break;case"square":if(i)tempV2_1.subVectors(r,t),tempV2_2.set(tempV2_1.y,-tempV2_1.x),tempV2_3.addVectors(tempV2_1,tempV2_2).add(t),tempV2_4.subVectors(tempV2_2,tempV2_1).add(t),o?(tempV2_3.toArray(n,3),tempV2_4.toArray(n,0),tempV2_4.toArray(n,9)):(tempV2_3.toArray(n,3),tempV2_3.toArray(n,9),tempV2_4.toArray(n,0));else{tempV2_1.subVectors(a,t),tempV2_2.set(tempV2_1.y,-tempV2_1.x),tempV2_3.addVectors(tempV2_1,tempV2_2).add(t),tempV2_4.subVectors(tempV2_2,tempV2_1).add(t);var l=n.length;o?(tempV2_3.toArray(n,l-3),tempV2_4.toArray(n,l-6),tempV2_4.toArray(n,l-12)):(tempV2_3.toArray(n,l-6),tempV2_4.toArray(n,l-3),tempV2_4.toArray(n,l-12))}}}});export{SVGLoader};