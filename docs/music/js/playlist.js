let currentPlaybackSource="";const dbPromise=idb.openDB("musicDb",1,{upgrade(e){e.objectStoreNames.contains("mp3Directories")||e.createObjectStore("mp3Directories",{keyPath:"directoryName"}),e.objectStoreNames.contains("youtubePlaylists")||e.createObjectStore("youtubePlaylists",{keyPath:"playlistName"})}});async function storeDirectoryInIndexedDB(e,t){const r=(await dbPromise).transaction("mp3Directories","readwrite"),n=t.map((e=>({name:e.name,blob:e.blob})));await r.store.put({directoryName:e,data:n}),await r.done}async function loadDirectoriesFromIndexedDB(){const e=(await dbPromise).transaction("mp3Directories","readonly"),t=await e.store.getAll();return await e.done,t}async function deleteDirectoriesFromIndexedDB(e){const t=(await dbPromise).transaction("mp3Directories","readwrite");await t.store.delete(e),await t.done}let directory=[],currentTrackIndex=0,isShuffled=!1,isLooped=!1,currentDirectoryName="";async function renderDirectories(){const e=document.getElementById("directoriesContainer");e.innerHTML="<hr>";(await loadDirectoriesFromIndexedDB()).forEach((t=>{const r=t.directoryName;let n=`<details open><summary>${r}</summary>`;t.data.forEach(((e,t)=>{n+=`\n                <div>\n                    <button onclick="playFromDirectory('${r}', ${t})">Play</button>\n                    <span style="float: right; color: red; cursor: pointer;" onclick="removeFromDirectory('${r}', ${t})">\n                        <i class="fa fa-times"></i>\n                    </span>\n                    <p>${e.name}</p>\n                </div>\n            `})),n+=`<br><button style="float: right; color:" onclick="deleteDirectory('${r}')">Delete Directory</button><br></details><hr>`,e.innerHTML+=n}))}function removeFromDirectory(e,t){confirm("Are you sure you want to remove this track from the directory?")&&loadDirectoriesFromIndexedDB().then((r=>{const n=r.find((t=>t.directoryName===e));n&&(n.data.splice(t,1),storeDirectoryInIndexedDB(e,n.data.map((e=>({blob:e.blob,name:e.name})))),renderDirectories())}))}function playFromPlaylist(e,t){currentPlaybackSource="YouTube"}function deleteDirectory(e){confirm("Are you sure you want to delete this entire directory?")&&deleteDirectoriesFromIndexedDB(e).then((()=>{renderDirectories()}))}function playFromDirectory(e,t){currentPlaybackSource="MP3",loadDirectoriesFromIndexedDB().then((r=>{const n=r.find((t=>t.directoryName===e));if(n&&n.data[t]){directory=n.data.map((e=>({blob:e.blob,url:URL.createObjectURL(e.blob),name:e.name}))),currentDirectoryName=e,currentTrackIndex=t;const r=directory[currentTrackIndex];playNew(r.url,r.name)}}))}function playNew(e,t){const r=document.getElementById("audioPlayer"),n=document.getElementById("title");r.src=e,n.textContent=t;const o=document.getElementById("play"),a=document.getElementById("pause");r.src&&(r.play(),o.style.display="none",a.style.display="")}function play(){"MP3"===currentPlaybackSource?playMP3():"YouTube"===currentPlaybackSource&&playYouTube()}function playYouTube(){}function playMP3(){const e=document.getElementById("audioPlayer"),t=document.getElementById("play"),r=document.getElementById("pause");e.src?(e.play(),t.style.display="none",r.style.display=""):directory.length>0&&(playFromDirectory(0),t.style.display="none",r.style.display="")}function pause(){const e=document.getElementById("audioPlayer"),t=document.getElementById("play"),r=document.getElementById("pause");e.pause(),r.style.display="none",t.style.display=""}function playNextTrack(){if(console.log("playNextTrack",{currentTrackIndex:currentTrackIndex,directory:directory}),isLooped&&currentTrackIndex===directory.length-1)currentTrackIndex=0;else if(isShuffled)currentTrackIndex=Math.floor(Math.random()*directory.length);else{if(!(currentTrackIndex<directory.length-1))return;currentTrackIndex++}console.log("currentTrackIndex",currentTrackIndex),playFromCurrentDirectory(currentTrackIndex)}function setShuffle(){isShuffled=!isShuffled}function setLoop(){isLooped=!isLooped}function previous(){currentTrackIndex>0&&(currentTrackIndex--,playFromCurrentDirectory(currentTrackIndex))}function next(){playNextTrack()}function playFromCurrentDirectory(e){if(directory&&directory.length>e){const t=directory[e];playNew(t.url,t.name)}}function seekTo(e){document.getElementById("audioPlayer").currentTime=e}function setVolume(e){document.getElementById("audioPlayer").volume=e/100}function updateProgressBar(){const e=document.getElementById("audioPlayer"),t=document.getElementById("progressBar");e.duration&&(t.max=e.duration,t.value=e.currentTime)}document.getElementById("directoryPickerButton").addEventListener("click",(async function(){const e=await window.showDirectoryPicker();currentDirectoryName=e.name,directory=[];for await(const t of e.values())if("file"===t.kind&&t.name.endsWith(".mp3")){const e=await t.getFile(),r=URL.createObjectURL(e);directory.push({blob:e,url:r,name:e.name})}storeDirectoryInIndexedDB(currentDirectoryName,directory),renderDirectories()})),document.getElementById("volVal").addEventListener("input",(function(){setVolume(this.value)})),audioPlayer.addEventListener("timeupdate",updateProgressBar),audioPlayer.addEventListener("ended",playNextTrack),setVolume(document.getElementById("volVal").value),document.addEventListener("DOMContentLoaded",(async()=>{currentPlaybackSource="MP3",await renderDirectories()}));