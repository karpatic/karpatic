import{promises as e}from"fs";import t from"path";const s="./src/ipynb/",i="./src/client/posts";import o from"http-server";const a=o.createServer({root:"./",cors:!0,host:"0.0.0.0"});async function ipynb_publish(s="index",r=i,o="json"){let a;if("html"===o)raw=await nb2html(s),s=/[^/]*$/.exec(s);else if("json"===o){const{nb2json:e}=await import("./convert.mjs?type=module",{type:"module"});a=await e(s);let{filename:t,...i}=a.meta;try{t=t?.toLowerCase().replaceAll(" ","_")}catch(e){console.log("ERROR: ",e),t=s.split("/")[s.split("/").length-1]}a.meta={filename:t,...i},s=t}const c=t.join(r,`${s}.${o}`);return await e.writeFile(c,"json"===o?JSON.stringify(a):a),a}a.listen(8085,(()=>{})),async function cv_cli_nbs2html(){const o=process.argv.slice(2),c=o[0]||"index";let n=o[0]?o[0]+"/":"";!async function generate_sitemap(o,c,n){let l=[],{csp:m,sitemap:p,breadcrumbs:y,badges:d,keywords:h,comments:b,hide:f,image:w,toc:g,title:u,...$}=(await ipynb_publish(`${s}/${n}`,i)).meta;l.push($);let j=`${s}/${c}`,_=`${i}/${c}`;try{await e.access(_)}catch(t){if("ENOENT"===t.code)try{await e.mkdir(_,{recursive:!0})}catch(e){console.error("Error creating directory:",e)}else console.error("Error accessing directory:",t)}for(const e of o){const t=await ipynb_publish(j+e,_);if(!t.meta.hide){const{csp:e,sitemap:s,breadcrumbs:i,badges:r,keywords:o,comments:a,hide:c,image:n,toc:m,title:p,...y}=t.meta;l.push(y)}}const v=t.join(i,n+"_map.json");try{await e.writeFile(v,JSON.stringify(l))}catch(t){await e.writeFile(v,"{}"),console.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~----ERROR:",r.meta)}a.close((()=>{console.log("Server closed.")}))}(o[1]?.split(",")||(await e.readdir(`./src/ipynb/${n}`)).filter((e=>".ipynb"===t.extname(e))).map((e=>t.parse(e).name)),n,c)}();