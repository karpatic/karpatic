import{promises as e}from"fs";import t from"path";const s="./src/ipynb/",o="./src/client/posts/";import i from"http-server";const a=i.createServer({root:"./",cors:!0,host:"0.0.0.0"});async function ipynb_publish(s,o,i="json"){let r,a;if("json"===i){const{nb2json:e}=await import("./convert.mjs?type=module",{type:"module"});r=await e(s);let{filename:t,...o}=r.meta;t=t||s.split("/")[s.split("/").length-1],a=t=t.toLowerCase().replaceAll(" ","_"),r.meta={...o,filename:t}}const c=t.join(o,`${a}.${i}`);return await e.writeFile(c,"json"===i?JSON.stringify(r):r),r}a.listen(8085,(()=>{})),async function cv_cli_nbs2html(){const i=process.argv.slice(2),c=i[0];!async function generate_sectionmap(t,i){console.log("generate_sectionmap-",t,i);let c=[],{csp:n,sitemap:l,breadcrumbs:m,badges:p,keywords:y,comments:d,hide:f,image:$,toc:b,title:g,...h}=(await ipynb_publish(`${s}${i}`,o)).meta;c.push(h);try{await e.access(`${o}${i}`)}catch(t){if("ENOENT"===t.code)try{await e.mkdir(`${o}${i}`,{recursive:!0})}catch(e){console.error("Error creating directory:",e)}else console.error("Error accessing directory:",t)}for(const e of t){const t=await ipynb_publish(`${s}${i}/${e}`,`${o}${i}`);if(!t.meta.hide){const{csp:e,sitemap:s,breadcrumbs:o,badges:i,keywords:r,comments:a,hide:n,image:l,toc:m,title:p,...y}=t.meta;c.push(y)}}console.log("links",c);const w=`${o}${i}_map.json`;try{await e.writeFile(w,JSON.stringify(c))}catch(t){await e.writeFile(w,"{}"),console.log("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~----ERROR:",r.meta)}a.close((()=>{console.log("Server closed.")}))}(i[1]?.split(",")||(await e.readdir(`${s}${c}/`)).filter((e=>".ipynb"===t.extname(e))).map((e=>t.parse(e).name)),c)}();